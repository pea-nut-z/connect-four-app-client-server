{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/auth/PrivateRoute.js","components/Dashboard.js","components/game/SquareGrid.js","components/game/help.js","contexts/socket.js","components/game/Grid.js","components/game/Game.js","components/Page.js","components/auth/UpdateProfile.js","components/auth/Signup.js","components/auth/Login.js","components/auth/ForgotPassword.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","appId","base","Rebase","createClass","database","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","PrivateRoute","Component","component","rest","render","props","to","Dashboard","toggleGameMode","userName","played","won","error","setError","history","useHistory","a","push","Card","Body","className","Alert","variant","Button","onClick","SquareGrid","colIdx","handleMove","initialGrid","grid","i","Array","fill","checkResult","r","length","c","every","row","includes","findAValidMove","alphabeta","numOfCols","depth","isMaximizingPlayer","result","bestMove","bestDepth","bestScore","Infinity","undefined","depthAndScore","moveDepth","moveScore","socket","socketio","connect","forceNew","SocketContext","Grid","forwardRef","ref","game","handleResult","opponent","currentPlayerNum","setGrid","gameOver","setGameOver","ready","toggleReady","thisTurn","endThisTurn","client","currentPlayerColor","opponentPlayerColor","useImperativeHandle","resetGrid","newGrid","slice","bestMoves","Math","floor","random","findAiMove","aiMoveRowIdx","aiMoveColIdx","emit","on","id","map","rowIndex","style","color","Game","incrementData","player1Name","assignPlayer1Name","player2Name","assignPlayer2Name","setCurrentPlayerNum","currentPlayerName","setCurrentPlayerName","numOfRounds","setNumOfRounds","score1","setScore1","score2","setScore2","saveResult","resultMsg","displayResultMsg","info","displayInfo","replayButton","disableReplayButton","useRef","alert","player2","player1","playerIndex","name","num","disconnect","background","disabled","current","emptyGrid","JSON","stringify","window","location","reload","Page","displayName","uid","setUserName","parse","localStorage","getItem","data","setData","loadGame","mode","syncState","context","setState","state","existingData","Object","keys","post","removeBinding","console","log","setItem","key","updatedData","UpdateProfile","usernameRef","emailRef","passwordRef","passwordConfirmRef","Form","onSubmit","e","preventDefault","promises","updateProfile","Promise","all","then","catch","Group","Label","Control","type","required","defaultValue","placeholder","Signup","cred","Login","ForgotPassword","message","setMessage","App","Container","minHeight","maxWidth","minWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4774d85.chunk.js","sourcesContent":["import Rebase from \"re-base\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nconst base = Rebase.createClass(app.database());\nexport const auth = app.auth();\nexport { app };\nexport default base;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    ></Route>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Dashboard({ toggleGameMode, logout, userName, played, won }) {\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  async function handleLogout() {\n    setError(\"\");\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Hello, {userName}!</h2>\n          <div className=\"row\">\n            <h4 className=\"col-6 text-center\">🎮 ✖️ {played}</h4>\n            <h4 className=\"col-6 text-center\">🏆 ✖️ {won}</h4>\n          </div>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n\n          <Button\n            onClick={() => {\n              toggleGameMode(\"single\");\n            }}\n            className=\"btn btn-warning w-100 mt-3\"\n          >\n            Challenge Peanutbot\n          </Button>\n          <Button\n            onClick={() => {\n              toggleGameMode(\"multi\");\n            }}\n            className=\"btn btn-warning w-100 mt-3\"\n          >\n            Play With A Friend\n          </Button>\n          <Link to=\"/update-profile\" className=\"btn btn-warning w-100 mt-3\">\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" className=\"text-decoration-none\" onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function SquareGrid({ value, colIdx, handleMove }) {\n  return (\n    <div className=\"square bg-primary\" onClick={() => handleMove(colIdx)}>\n      <div className={`circle ${value ? value : \"\"}`}></div>\n    </div>\n  );\n}\n","// NOTE\n// r = row; c = column\n\nexport const initialGrid = function () {\n  const numOfRows = 6;\n  const numOfCols = 7;\n  let grid = [];\n  let i = 0;\n  while (i < numOfRows) {\n    grid.push(Array(numOfCols).fill(null));\n    i++;\n  }\n  return grid;\n};\n\nexport function checkResult(grid) {\n  for (let r = 0; r < grid.length; r++) {\n    for (let c = 0; c < grid[r].length; c++) {\n      let value = grid[r][c];\n\n      if (\n        //left and right\n        value &&\n        value === grid[r][c + 1] &&\n        value === grid[r][c + 2] &&\n        value === grid[r][c + 3]\n      ) {\n        return value;\n      }\n\n      if (r < grid.length - 3) {\n        if (\n          //up and down\n          (value &&\n            value === grid[r + 1][c] &&\n            value === grid[r + 2][c] &&\n            value === grid[r + 3][c]) ||\n          //diagonal \" \\ \"\n          (value &&\n            value === grid[r + 1][c + 1] &&\n            value === grid[r + 2][c + 2] &&\n            value === grid[r + 3][c + 3]) ||\n          //diagonal \" / \"\n          (value &&\n            value === grid[r + 1][c - 1] &&\n            value === grid[r + 2][c - 2] &&\n            value === grid[r + 3][c - 3])\n        ) {\n          return value;\n        }\n      }\n    }\n  }\n  const tie = grid.every((row) => !row.includes(null));\n  if (tie) return \"Draw\";\n}\n\nexport function findAValidMove(grid, c) {\n  for (let r = grid.length - 1; r >= 0; r--) {\n    if (grid[r][c] === null) {\n      let move = r;\n      return move;\n    }\n  }\n}\n\nexport function findAiMove(grid) {\n  let maxDepth = 6;\n  let numOfCols = grid[0].length;\n  let bestMoves = [];\n  let bestDepth;\n  let bestScore = -Infinity;\n\n  // console.log(\"*********BEGIN*********\");\n  for (let c = 0; c < numOfCols; c++) {\n    let r = findAValidMove(grid, c);\n    if (r !== undefined) {\n      grid[r][c] = \"p2\";\n      let depthAndScore = alphabeta(grid, numOfCols, maxDepth, false);\n      grid[r][c] = null;\n      let [moveDepth, moveScore] = depthAndScore;\n      if (\n        moveScore > bestScore ||\n        (moveScore === bestScore && moveDepth > bestDepth && moveScore >= 0) ||\n        (moveScore === bestScore && moveDepth < bestDepth && moveScore < 0)\n      ) {\n        // console.log(\n        //   \"Created new best moves\",\n        //   moveScore,\n        //   bestScore,\n        //   moveDepth,\n        //   bestDepth\n        // );\n        bestMoves = [];\n        bestDepth = moveDepth;\n        bestScore = moveScore;\n        bestMoves.push([r, c]);\n      } else if (moveScore === bestScore && moveDepth === bestDepth) {\n        // console.log(\n        //   \"pushed moves with same score\",\n        //   moveScore,\n        //   bestScore,\n        //   moveDepth,\n        //   bestDepth\n        // );\n        bestMoves.push([r, c]);\n      }\n    }\n  }\n  // console.log({ bestMoves });\n  let randomMove = Math.floor(Math.random() * bestMoves.length);\n  return bestMoves[randomMove];\n}\n\nfunction alphabeta(grid, numOfCols, depth, isMaximizingPlayer) {\n  let result = checkResult(grid);\n  if (result === \"p1\") return [depth, -10];\n  if (result === \"p2\") return [depth, 10];\n  if (result === \"Draw\" || depth === 0) return [depth, 0];\n\n  if (isMaximizingPlayer) {\n    let bestMove = [];\n    let bestDepth = 0;\n    let bestScore = -Infinity;\n    for (let c = 0; c < numOfCols; c++) {\n      let r = findAValidMove(grid, c);\n      if (r !== undefined) {\n        grid[r][c] = \"p2\";\n        let depthAndScore = alphabeta(grid, numOfCols, depth - 1, false);\n        grid[r][c] = null;\n        let [moveDepth, moveScore] = depthAndScore;\n        if (\n          moveScore > bestScore ||\n          (moveScore === bestScore && moveDepth > bestDepth && moveScore >= 0) ||\n          (moveScore === bestScore && moveDepth < bestDepth && moveScore < 0)\n        ) {\n          bestDepth = moveDepth;\n          bestScore = moveScore;\n          bestMove = depthAndScore;\n        }\n      }\n    }\n    return bestMove;\n  } else {\n    let bestMove = [];\n    let bestDepth = 0;\n    let bestScore = Infinity;\n    for (let c = 0; c < numOfCols; c++) {\n      let r = findAValidMove(grid, c);\n      if (r !== undefined) {\n        grid[r][c] = \"p1\";\n        let depthAndScore = alphabeta(grid, numOfCols, depth - 1, true);\n        grid[r][c] = null;\n        // if (!depthAndScore) continue;\n        let [moveDepth, moveScore] = depthAndScore;\n        if (moveScore < bestScore || (moveScore === bestScore && moveDepth > bestDepth)) {\n          bestDepth = moveDepth;\n          bestScore = moveScore;\n          bestMove = depthAndScore;\n        }\n      }\n    }\n    return bestMove;\n  }\n}\n","import socketio from \"socket.io-client\";\nimport React from \"react\";\nexport const socket = socketio.connect(\"/\", { forceNew: true });\n// export const socket = socketio.connect(\"http://localhost:3001\", { forceNew: true });\nexport const SocketContext = React.createContext();\n","import React, { useState, useImperativeHandle, forwardRef, useEffect, useContext } from \"react\";\nimport SquareGrid from \"./SquareGrid\";\nimport { initialGrid, checkResult, findAValidMove, findAiMove } from \"./help\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport const Grid = forwardRef(({ game, handleResult, opponent, currentPlayerNum }, ref) => {\n  const test = [\n    [null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null],\n    [\"p1\", null, null, null, null, null, null],\n    [\"p1\", null, null, null, null, null, null],\n    [\"p1\", \"p2\", \"p2\", \"p2\", null, null, null],\n    [\"p2\", \"p1\", \"p2\", \"p1\", \"p2\", \"p1\", \"p2\"],\n  ];\n\n  const [grid, setGrid] = useState(initialGrid);\n  const [gameOver, setGameOver] = useState(false);\n  const [ready, toggleReady] = useState(true);\n  const [thisTurn, endThisTurn] = useState();\n  const client = useContext(SocketContext);\n  const currentPlayerColor = currentPlayerNum === \"p1\" ? \"#f012be\" : \"#2ecc40\";\n  const opponentPlayerColor = currentPlayerNum === \"p1\" ? \"#2ecc40\" : \"#f012be\";\n\n  useImperativeHandle(ref, () => ({\n    grid,\n    resetGrid,\n  }));\n\n  const resetGrid = () => {\n    setGrid(initialGrid);\n    setGameOver(false);\n    endThisTurn(!thisTurn);\n  };\n\n  useEffect(() => {\n    if (!gameOver && game === \"single\" && !ready) {\n      let newGrid = grid.slice();\n      const [aiMoveRowIdx, aiMoveColIdx] = findAiMove(newGrid);\n      newGrid[aiMoveRowIdx][aiMoveColIdx] = \"p2\";\n      setGrid(newGrid);\n      let result = checkResult(newGrid);\n      if (result) {\n        setGameOver(true);\n        handleResult(result);\n      } else {\n        toggleReady(!ready);\n      }\n    }\n\n    // to all clients except sender\n    if (game === \"multi\") {\n      toggleReady(!ready);\n      client.emit(\"update-grid\", { grid, gameOver, ready });\n      client.on(\"update-grid\", ({ grid, gameOver, ready }) => {\n        setGameOver(gameOver);\n        setGrid(grid);\n        toggleReady(ready);\n      });\n    }\n  }, [thisTurn]);\n\n  const handleMove = (colIdx) => {\n    if (!gameOver && ready) {\n      let newGrid = grid.slice();\n      const rowIdx = findAValidMove(newGrid, colIdx);\n      newGrid[rowIdx][colIdx] = currentPlayerNum;\n      setGrid(newGrid);\n      let result = checkResult(newGrid);\n      result && setGameOver(true);\n      result && handleResult(result);\n      game === \"single\" && toggleReady(false);\n      endThisTurn(!thisTurn);\n    }\n  };\n\n  return (\n    <>\n      {/* Grid */}\n      <div id=\"boarder\">\n        <div id=\"grid\">\n          {grid.map((row, rowIndex) => (\n            <div className=\"row\" key={rowIndex}>\n              {row.map((value, colIdx) => (\n                <SquareGrid key={colIdx} value={value} colIdx={colIdx} handleMove={handleMove} />\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* WHO's TURN */}\n      <h4\n        className=\"text-center mt-4\"\n        style={{ color: ready ? currentPlayerColor : opponentPlayerColor }}\n      >\n        {gameOver || !opponent\n          ? \"\"\n          : ready\n          ? \"Your turn\"\n          : opponent\n          ? `Waiting for ${opponent}...`\n          : \"Waiting for a player to join...\"}\n      </h4>\n    </>\n  );\n});\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Grid } from \"./Grid\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport { initialGrid } from \"./help\";\nimport \"./game.css\";\n\nexport default function Game({ userName, game, incrementData, toggleGameMode }) {\n  const [player1Name, assignPlayer1Name] = useState(\"\");\n  const [player2Name, assignPlayer2Name] = useState(\"\");\n  const [currentPlayerNum, setCurrentPlayerNum] = useState(\"p1\");\n  const [currentPlayerName, setCurrentPlayerName] = useState(\"\");\n  const [numOfRounds, setNumOfRounds] = useState(1);\n  const [score1, setScore1] = useState(0);\n  const [score2, setScore2] = useState(0);\n  const [result, saveResult] = useState(\"\");\n  const [resultMsg, displayResultMsg] = useState(\"\");\n  const [info, displayInfo] = useState(\"\");\n  const [replayButton, disableReplayButton] = useState(false);\n\n  const opponent = currentPlayerNum === \"p1\" ? player2Name : player1Name;\n  const client = useContext(SocketContext);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (game === \"single\") {\n      assignPlayer1Name(userName);\n      assignPlayer2Name(\"Peanutbot\");\n    }\n\n    if (game === \"multi\") {\n      client.on(\"full-server\", () => {\n        toggleGameMode(\"\");\n        alert(\"Sorry, server is full.\");\n      });\n\n      client.emit(\"player-connecting\", { userName });\n\n      client.on(\"player-1-connected\", (player2) => {\n        assignPlayer1Name(userName);\n        setCurrentPlayerName(userName);\n        player2 && assignPlayer2Name(player2);\n      });\n\n      client.on(\"player-2-connected\", (player1) => {\n        assignPlayer2Name(userName);\n        setCurrentPlayerName(userName);\n        setCurrentPlayerNum(\"p2\");\n        assignPlayer1Name(player1);\n      });\n\n      client.on(\"player-has-joined\", ({ userName, playerIndex }) => {\n        playerIndex === 0 ? assignPlayer1Name(userName) : assignPlayer2Name(userName);\n        setScore1(0);\n        setScore2(0);\n      });\n\n      //   handle disconnect\n      client.on(\"player-disconnected\", ({ name, num }) => {\n        num === 0 ? assignPlayer1Name(\"\") : assignPlayer2Name(\"\");\n        displayInfo(`${name} left💨`);\n      });\n      return () => client.disconnect(currentPlayerName);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (game === \"multi\") {\n      // to all clients except sender\n      client.emit(\"update-result-display-and-rounds\", {\n        result,\n        currentPlayerName,\n        numOfRounds,\n      });\n      client.on(\"update-result-display-and-rounds\", ({ result, currentPlayerName, numOfRounds }) => {\n        setNumOfRounds(numOfRounds);\n        if (result) {\n          result === \"Draw\"\n            ? displayResultMsg(result + \"! 🤝\")\n            : displayResultMsg(\"😱 YOU LOST! 💩\");\n          displayInfo(`Waiting for ${currentPlayerName} to restart the game...`);\n          disableReplayButton(true);\n        } else {\n          displayResultMsg(\"\");\n          displayInfo(\"\");\n          disableReplayButton(false);\n        }\n      });\n\n      // to all clients\n      client.emit(\"update-score\", { result });\n      client.on(\"update-score\", ({ result }) => {\n        result && incrementData(\"played\");\n        result === \"p1\" && setScore1(score1 + 1);\n        result === \"p2\" && setScore2(score2 + 1);\n      });\n    }\n  }, [result, numOfRounds]);\n\n  useEffect(() => {\n    if (game === \"single\") {\n      if (result === \"p1\") {\n        setScore1(score1 + 1);\n        incrementData(\"won\");\n      }\n      if (result === \"p2\") {\n        setScore2(score2 + 1);\n      }\n    }\n  }, [result]);\n\n  function handleResult(result) {\n    if (game === \"multi\") {\n      result === \"Draw\" ? displayResultMsg(result + \"! 🤝\") : displayResultMsg(\"🥂 YOU WIN! 🎉\");\n      displayInfo(\"Click Replay ⬇️\");\n      incrementData(\"won\");\n      saveResult(result);\n    } else {\n      if (result === \"Draw\") {\n        displayResultMsg(result + \"! 🤝\");\n      } else if (result === \"p1\") {\n        displayResultMsg(\"🥂 YOU WIN! 🎉\");\n      } else {\n        displayResultMsg(\"😱 YOU LOST! 💩\");\n      }\n      saveResult(result);\n      displayInfo(\"Click Replay ⬇️\");\n    }\n  }\n\n  function handleReplay() {\n    !resultMsg && incrementData(\"played\");\n    ref.current.resetGrid();\n    setNumOfRounds(numOfRounds + 1);\n    displayResultMsg(\"\");\n    displayInfo(\"\");\n    saveResult(\"\");\n  }\n\n  const handleQuit = () => {\n    const emptyGrid = JSON.stringify(ref.current.grid) === JSON.stringify(initialGrid());\n    if (!info && !result && !emptyGrid) incrementData(\"played\");\n    toggleGameMode(\"\");\n    window.location.reload(false);\n  };\n\n  return (\n    <>\n      <div id=\"container\" className=\"container\">\n        <div className=\"row\">\n          {/* SCORE DSIPLAY */}\n          <div id=\"scores\" className=\"col\">\n            <h6 className=\"text-primary\">Round: {numOfRounds}</h6>\n            <h4>\n              <span id=\"score-1\" style={{ color: \"#f012be\" }}>\n                {score1}\n              </span>\n              <span className=\"text-primary\"> vs </span>\n              <span id=\"score-2\" className=\"text-success\">\n                {score2}\n              </span>\n            </h4>\n          </div>\n          {/* PLAYERS LEGEND */}\n          <div id=\"players\" className=\"col\">\n            <h6 className=\"player float-right\">\n              {player1Name ? player1Name : \"Waiting...\"}\n              <div style={{ background: \"#f012be\" }} className=\"indicator rounded ml-2\" />\n            </h6>\n            <h6 className=\"player float-right\">\n              {player2Name ? player2Name : \"Waiting...\"}\n              <div className=\"bg-success indicator rounded ml-2\" />\n            </h6>\n          </div>\n        </div>\n      </div>\n\n      <Grid\n        ref={ref}\n        game={game}\n        handleResult={handleResult}\n        opponent={opponent}\n        currentPlayerNum={currentPlayerNum}\n      />\n\n      {/* RESULT */}\n      <h4 className=\"text-center text-warning mt-4\">{resultMsg}</h4>\n\n      {/* INFO */}\n      <h5 className=\"text-center text-warning mt-4\">{info}</h5>\n\n      <Button disabled={replayButton} className=\"btn-warning w-100 mt-4\" onClick={handleReplay}>\n        Replay\n      </Button>\n      <Button className=\"btn btn-warning w-100 mt-3 \" onClick={handleQuit}>\n        Quit\n      </Button>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Dashboard from \"./Dashboard\";\nimport Game from \"./game/Game\";\nimport { SocketContext, socket } from \"../contexts/socket\";\nimport base from \"./../firebase\";\n\nexport default function Page() {\n  // USER INFO\n  const { currentUser, logout } = useAuth();\n  const displayName = currentUser.displayName;\n  const id = currentUser.uid;\n\n  const [userName, setUserName] = useState(displayName);\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(id)) || {});\n  const [game, loadGame] = useState();\n\n  useEffect(() => {\n    const ref = base.syncState(id, {\n      context: {\n        setState: ({ data }) => setData({ ...data }),\n        state: { data },\n      },\n      state: \"data\",\n    });\n\n    const existingData = ref[\"context\"][\"state\"][\"data\"];\n    if (Object.keys(existingData).length === 0) {\n      base.post(id, {\n        data: { played: 0, won: 0 },\n      });\n\n      setData({ played: 0, won: 0 });\n      setUserName(\"You\");\n    }\n\n    return () => {\n      base.removeBinding(ref);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log(\"ran second effect\");\n    localStorage.setItem(id, JSON.stringify(data));\n  }, [data]);\n\n  function toggleGameMode(mode) {\n    loadGame(mode);\n  }\n\n  function incrementData(key) {\n    const updatedData = { ...data, [key]: data[key] + 1 };\n    setData(updatedData);\n    base.post(id, {\n      data: updatedData,\n    });\n  }\n\n  return (\n    <>\n      {game ? (\n        <SocketContext.Provider value={socket}>\n          <Game\n            userName={userName}\n            game={game}\n            incrementData={incrementData}\n            toggleGameMode={toggleGameMode}\n          />\n        </SocketContext.Provider>\n      ) : (\n        <Dashboard\n          toggleGameMode={toggleGameMode}\n          logout={logout}\n          userName={userName}\n          played={data.played}\n          won={data.won}\n        />\n      )}\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function UpdateProfile() {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { currentUser, updatePassword, updateEmail } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (usernameRef.current.value !== currentUser.displayName) {\n      promises.push(currentUser.updateProfile({ displayName: usernameRef.current.value }));\n    }\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch(() => {\n        setError(\"Failed to update account\");\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={usernameRef}\n                required\n                defaultValue={currentUser.displayName}\n              />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Signup() {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value).then((cred) => {\n        cred.user.updateProfile({\n          displayName: usernameRef.current.value,\n        });\n      });\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n      setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" ref={usernameRef} required />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Minimum 6 characters\"\n                ref={passwordRef}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account?{\" \"}\n        <Link className=\"text-decoration-none\" to=\"/login\">\n          Log In\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setLoading(false);\n      setError(\"Failed to log in\");\n    }\n  }\n\n  return (\n    <>\n      <h1 className=\"title text-center text-primary\">Connect Four</h1>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"btn-warning w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link className=\"text-decoration-none\" to=\"/forgot-password\">\n              Forgot Password?\n            </Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account?{\" \"}\n        <Link className=\"text-decoration-none\" to=\"/signup\">\n          Sign Up\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ForgotPassword() {\n  const emailRef = useRef();\n  const { resetPassword } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Failed to reset password\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\nimport Page from \"./components/Page\";\nimport UpdateProfile from \"./components/auth/UpdateProfile\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport ForgotPassword from \"./components/auth/ForgotPassword\";\nimport \"./app.css\";\n\nexport default function App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\", minWidth: \"400px\" }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Page} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}