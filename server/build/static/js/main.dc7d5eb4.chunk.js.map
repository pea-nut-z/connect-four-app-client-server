{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/auth/PrivateRoute.js","components/Dashboard.js","components/game/SquareGrid.js","components/game/help.js","contexts/socket.js","components/game/Grid.js","components/game/Game.js","components/Page.js","components/auth/UpdateProfile.js","components/auth/Signup.js","components/auth/Login.js","components/auth/ForgotPassword.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","appId","base","Rebase","createClass","database","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","PrivateRoute","Component","component","rest","render","props","to","Dashboard","toggleGameMode","updateProfile","userName","played","won","history","useHistory","error","setError","a","push","Card","Body","id","className","Alert","variant","Button","onClick","SquareGrid","colIdx","handleMove","data-testid","checkResult","grid","r","length","c","every","row","includes","findAValidMove","alphabeta","numOfCols","depth","isMaximizingPlayer","result","bestMove","bestDepth","bestScore","Infinity","undefined","depthAndScore","moveDepth","moveScore","SocketContext","socket","socketio","connect","forceNew","Grid","forwardRef","ref","game","initialGrid","handleResult","opponent","currentPlayerNum","blankGrid","JSON","parse","stringify","setGrid","gameOver","setGameOver","ready","toggleReady","thisTurn","endThisTurn","client","currentPlayerColor","opponentPlayerColor","useImperativeHandle","resetGrid","newGrid","slice","setTimeout","bestMoves","Math","floor","random","findAiMove","aiMoveRowIdx","aiMoveColIdx","emit","on","map","rowIndex","style","color","Game","incrementData","player1Name","assignPlayer1Name","player2Name","assignPlayer2Name","setCurrentPlayerNum","currentPlayerName","setCurrentPlayerName","numOfRounds","setNumOfRounds","score1","setScore1","score2","setScore2","saveResult","resultMsg","displayResultMsg","info","displayInfo","replayButton","disableReplayButton","useRef","alert","player2","player1","playerIndex","name","num","disconnect","background","disabled","current","window","location","reload","Page","uid","profileName","displayName","useLocation","state","rows","cols","i","Array","fill","getGrid","localStorage","getItem","data","setData","loadGame","mode","syncState","context","setState","existingData","Object","keys","post","removeBinding","setItem","key1","key2","updatedData","UpdateProfile","usernameRef","emailRef","passwordRef","passwordConfirmRef","Form","onSubmit","e","preventDefault","promises","Promise","all","then","catch","Group","Label","Control","type","required","defaultValue","placeholder","Signup","cred","Login","ForgotPassword","message","setMessage","App","Container","minHeight","maxWidth","minWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc7d5eb4.chunk.js","sourcesContent":["import Rebase from \"re-base\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nconst base = Rebase.createClass(app.database());\nexport { app };\nexport const auth = app.auth();\nexport default base;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    ></Route>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Dashboard({ toggleGameMode, logout, updateProfile, userName, played, won }) {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n\n  async function handleLogout() {\n    setError(\"\");\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 id=\"userName\" className=\"text-center mb-4\">\n            Hello, {userName}!\n          </h2>\n          <div className=\"row\">\n            <h4 id=\"played\" className=\"col-6 text-center\">\n              🎮 ✖️ {played}\n            </h4>\n            <h4 id=\"won\" className=\"col-6 text-center\">\n              🏆 ✖️ {won}\n            </h4>\n          </div>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n\n          <Button\n            id=\"single\"\n            onClick={() => {\n              toggleGameMode(\"single\");\n            }}\n            className=\"btn btn-warning w-100 mt-3\"\n          >\n            Challenge Peanutbot\n          </Button>\n          <Button\n            id=\"multi\"\n            onClick={() => {\n              toggleGameMode(\"multi\");\n            }}\n            className=\"btn btn-warning w-100 mt-3\"\n          >\n            Play With A Friend\n          </Button>\n          <Button id=\"updateProfile\" className=\"btn btn-warning w-100 mt-3\" onClick={updateProfile}>\n            Update Profile\n          </Button>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button id=\"logout\" variant=\"link\" className=\"text-decoration-none\" onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function SquareGrid({ value, colIdx, handleMove }) {\n  return (\n    <div className=\"square bg-primary\" onClick={() => handleMove(colIdx)}>\n      <div data-testid=\"square\" className={`circle ${value ? value : \"\"}`}></div>\n    </div>\n  );\n}\n","// NOTE\n// r = row; c = column\nconst defaultRows = 6;\nconst defaultCols = 7;\n\nexport const getGrid = function (rows = defaultRows, cols = defaultCols) {\n  let grid = [];\n  let i = 0;\n  while (i < rows) {\n    grid.push(Array(cols).fill(null));\n    i++;\n  }\n  return grid;\n};\n\nexport function checkResult(grid) {\n  for (let r = 0; r < grid.length; r++) {\n    for (let c = 0; c < grid[r].length; c++) {\n      let value = grid[r][c];\n\n      if (\n        //left and right\n        value &&\n        value === grid[r][c + 1] &&\n        value === grid[r][c + 2] &&\n        value === grid[r][c + 3]\n      ) {\n        return value;\n      }\n\n      if (r < grid.length - 3) {\n        if (\n          //up and down\n          (value &&\n            value === grid[r + 1][c] &&\n            value === grid[r + 2][c] &&\n            value === grid[r + 3][c]) ||\n          //diagonal \" \\ \"\n          (value &&\n            value === grid[r + 1][c + 1] &&\n            value === grid[r + 2][c + 2] &&\n            value === grid[r + 3][c + 3]) ||\n          //diagonal \" / \"\n          (value &&\n            value === grid[r + 1][c - 1] &&\n            value === grid[r + 2][c - 2] &&\n            value === grid[r + 3][c - 3])\n        ) {\n          return value;\n        }\n      }\n    }\n  }\n  const tie = grid.every((row) => !row.includes(null));\n  if (tie) return \"Draw\";\n}\n\nexport function findAValidMove(grid, c) {\n  for (let r = grid.length - 1; r >= 0; r--) {\n    if (grid[r][c] === null) {\n      let move = r;\n      return move;\n    }\n  }\n}\n\nexport function findAiMove(grid) {\n  let maxDepth = 7;\n  let numOfCols = grid[0].length;\n  let bestMoves = [];\n  let bestDepth;\n  let bestScore = -Infinity;\n\n  // console.log(\"*********BEGIN*********\");\n  for (let c = 0; c < numOfCols; c++) {\n    let r = findAValidMove(grid, c);\n    if (r !== undefined) {\n      grid[r][c] = \"p2\";\n      let depthAndScore = alphabeta(grid, numOfCols, maxDepth, false);\n      grid[r][c] = null;\n      let [moveDepth, moveScore] = depthAndScore;\n      if (\n        moveScore > bestScore ||\n        (moveScore === bestScore && moveDepth > bestDepth && moveScore >= 0) ||\n        (moveScore === bestScore && moveDepth < bestDepth && moveScore < 0)\n      ) {\n        // console.log(\n        //   \"Created new best moves\",\n        //   moveScore,\n        //   bestScore,\n        //   moveDepth,\n        //   bestDepth\n        // );\n        bestMoves = [];\n        bestDepth = moveDepth;\n        bestScore = moveScore;\n        bestMoves.push([r, c]);\n      } else if (moveScore === bestScore && moveDepth === bestDepth) {\n        // console.log(\n        //   \"pushed moves with same score\",\n        //   moveScore,\n        //   bestScore,\n        //   moveDepth,\n        //   bestDepth\n        // );\n        bestMoves.push([r, c]);\n      }\n    }\n  }\n  // console.log({ bestMoves });\n  let randomMove = Math.floor(Math.random() * bestMoves.length);\n  return bestMoves[randomMove];\n}\n\nfunction alphabeta(grid, numOfCols, depth, isMaximizingPlayer) {\n  let result = checkResult(grid);\n  if (result === \"p1\") return [depth, -10];\n  if (result === \"p2\") return [depth, 10];\n  if (result === \"Draw\" || depth === 0) return [depth, 0];\n\n  if (isMaximizingPlayer) {\n    let bestMove = [];\n    let bestDepth = 0;\n    let bestScore = -Infinity;\n    for (let c = 0; c < numOfCols; c++) {\n      let r = findAValidMove(grid, c);\n      if (r !== undefined) {\n        grid[r][c] = \"p2\";\n        let depthAndScore = alphabeta(grid, numOfCols, depth - 1, false);\n        grid[r][c] = null;\n        let [moveDepth, moveScore] = depthAndScore;\n        if (\n          moveScore > bestScore ||\n          (moveScore === bestScore && moveDepth > bestDepth && moveScore >= 0) ||\n          (moveScore === bestScore && moveDepth < bestDepth && moveScore < 0)\n        ) {\n          bestDepth = moveDepth;\n          bestScore = moveScore;\n          bestMove = depthAndScore;\n        }\n      }\n    }\n    return bestMove;\n  } else {\n    let bestMove = [];\n    let bestDepth = 0;\n    let bestScore = Infinity;\n    for (let c = 0; c < numOfCols; c++) {\n      let r = findAValidMove(grid, c);\n      if (r !== undefined) {\n        grid[r][c] = \"p1\";\n        let depthAndScore = alphabeta(grid, numOfCols, depth - 1, true);\n        grid[r][c] = null;\n        // if (!depthAndScore) continue;\n        let [moveDepth, moveScore] = depthAndScore;\n        if (moveScore < bestScore || (moveScore === bestScore && moveDepth > bestDepth)) {\n          bestDepth = moveDepth;\n          bestScore = moveScore;\n          bestMove = depthAndScore;\n        }\n      }\n    }\n    return bestMove;\n  }\n}\n","import socketio from \"socket.io-client\";\nimport React from \"react\";\n// require(\"dotenv\").config();\n\n// export const socket = socketio.connect(\"/\", { forceNew: true });\n// export const socket = socketio.connect(\"http://localhost:3001\", { forceNew: true }); // Development\nexport const SocketContext = React.createContext();\n// let path = process.env.NODE_ENV === \"development\" ? \"http://localhost:3001\" : \"/\";\n\nexport const socket = socketio.connect(\"http://localhost:3001\", { forceNew: true });\n","import React, { useState, useImperativeHandle, forwardRef, useEffect, useContext } from \"react\";\nimport SquareGrid from \"./SquareGrid\";\nimport { checkResult, findAValidMove, findAiMove } from \"./help\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport const Grid = forwardRef(\n  ({ game, initialGrid, handleResult, opponent, currentPlayerNum }, ref) => {\n    const blankGrid = JSON.parse(JSON.stringify(initialGrid));\n    const [grid, setGrid] = useState(blankGrid);\n\n    const [gameOver, setGameOver] = useState(false);\n    const [ready, toggleReady] = useState(true);\n    const [thisTurn, endThisTurn] = useState();\n    const client = useContext(SocketContext);\n    const currentPlayerColor = currentPlayerNum === \"p1\" ? \"#f012be\" : \"#2ecc40\";\n    const opponentPlayerColor = currentPlayerNum === \"p1\" ? \"#2ecc40\" : \"#f012be\";\n\n    useImperativeHandle(ref, () => ({\n      grid,\n      resetGrid,\n    }));\n\n    const resetGrid = (result) => {\n      if (game === \"single\" && result === \"p1\") {\n        toggleReady(true);\n      }\n      setGrid(initialGrid);\n      setGameOver(false);\n      endThisTurn(!thisTurn);\n    };\n\n    useEffect(() => {\n      if (!gameOver && game === \"single\" && !ready) {\n        let newGrid = grid.slice();\n        setTimeout(() => {\n          const [aiMoveRowIdx, aiMoveColIdx] = findAiMove(newGrid);\n          newGrid[aiMoveRowIdx][aiMoveColIdx] = \"p2\";\n          setGrid(newGrid);\n          let result = checkResult(newGrid);\n          if (result) {\n            setGameOver(true);\n            handleResult(result);\n          } else {\n            toggleReady(!ready);\n          }\n        }, 500);\n      }\n\n      // to all clients except sender\n      if (game === \"multi\") {\n        toggleReady(!ready);\n        client.emit(\"update-grid\", { grid, gameOver, ready });\n        client.on(\"update-grid\", ({ grid, gameOver, ready }) => {\n          setGameOver(gameOver);\n          setGrid(grid);\n          toggleReady(ready);\n        });\n      }\n    }, [thisTurn]);\n\n    const handleMove = (colIdx) => {\n      if (!gameOver && ready) {\n        let newGrid = grid.slice();\n        const rowIdx = findAValidMove(newGrid, colIdx);\n        newGrid[rowIdx][colIdx] = currentPlayerNum;\n        setGrid(newGrid);\n        let result = checkResult(newGrid);\n        result && setGameOver(true);\n        result && handleResult(result);\n        game === \"single\" && toggleReady(false);\n        endThisTurn(!thisTurn);\n      }\n    };\n\n    return (\n      <>\n        {/* Grid */}\n        <div id=\"boarder\">\n          <div id=\"grid\">\n            {grid.map((row, rowIndex) => (\n              <div className=\"row\" key={rowIndex}>\n                {row.map((value, colIdx) => (\n                  <SquareGrid key={colIdx} value={value} colIdx={colIdx} handleMove={handleMove} />\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* WHO's TURN */}\n        <h4\n          className=\"text-center mt-4\"\n          style={{ color: ready ? currentPlayerColor : opponentPlayerColor }}\n        >\n          {gameOver || !opponent\n            ? \"\"\n            : ready\n            ? \"Your turn\"\n            : opponent\n            ? `Waiting for ${opponent}...`\n            : \"Waiting for a player to join...\"}\n        </h4>\n      </>\n    );\n  }\n);\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Grid } from \"./Grid\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport default function Game({ userName, game, initialGrid, incrementData, toggleGameMode }) {\n  const [player1Name, assignPlayer1Name] = useState(\"\");\n  const [player2Name, assignPlayer2Name] = useState(\"\");\n  const [currentPlayerNum, setCurrentPlayerNum] = useState(\"p1\");\n  const [currentPlayerName, setCurrentPlayerName] = useState(\"\");\n  const [numOfRounds, setNumOfRounds] = useState(1);\n  const [score1, setScore1] = useState(0);\n  const [score2, setScore2] = useState(0);\n  const [result, saveResult] = useState(\"\");\n  const [resultMsg, displayResultMsg] = useState(\"\");\n  const [info, displayInfo] = useState(\"\");\n  const [replayButton, disableReplayButton] = useState(false);\n\n  const opponent = currentPlayerNum === \"p1\" ? player2Name : player1Name;\n  const client = useContext(SocketContext);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (game === \"single\") {\n      assignPlayer1Name(userName);\n      assignPlayer2Name(\"Peanutbot\");\n    }\n\n    if (game === \"multi\") {\n      client.on(\"full-server\", () => {\n        toggleGameMode(\"\");\n        alert(\"Sorry, server is full.\");\n      });\n\n      client.emit(\"player-connecting\", { userName });\n\n      client.on(\"player-1-connected\", (player2) => {\n        assignPlayer1Name(userName);\n        setCurrentPlayerName(userName);\n        player2 && assignPlayer2Name(player2);\n      });\n\n      client.on(\"player-2-connected\", (player1) => {\n        assignPlayer2Name(userName);\n        setCurrentPlayerName(userName);\n        setCurrentPlayerNum(\"p2\");\n        assignPlayer1Name(player1);\n      });\n\n      client.on(\"player-has-joined\", ({ userName, playerIndex }) => {\n        playerIndex === 0 ? assignPlayer1Name(userName) : assignPlayer2Name(userName);\n        setScore1(0);\n        setScore2(0);\n      });\n\n      //   handle disconnect\n      client.on(\"player-disconnected\", ({ name, num }) => {\n        num === 0 ? assignPlayer1Name(\"\") : assignPlayer2Name(\"\");\n        displayInfo(`${name} left💨`);\n      });\n      return () => client.disconnect(currentPlayerName);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (game === \"multi\") {\n      // to all clients except sender\n      client.emit(\"update-result-display-and-rounds\", {\n        result,\n        currentPlayerName,\n        numOfRounds,\n      });\n      client.on(\"update-result-display-and-rounds\", ({ result, currentPlayerName, numOfRounds }) => {\n        setNumOfRounds(numOfRounds);\n        if (result) {\n          result === \"Draw\"\n            ? displayResultMsg(result + \"! 🤝\")\n            : displayResultMsg(\"😱 YOU LOST! 💩\");\n          displayInfo(`Waiting for ${currentPlayerName} to restart the game...`);\n          disableReplayButton(true);\n        } else {\n          displayResultMsg(\"\");\n          displayInfo(\"\");\n          disableReplayButton(false);\n        }\n      });\n\n      // to all clients\n      client.emit(\"update-score\", { result });\n      client.on(\"update-score\", ({ result }) => {\n        result && incrementData(\"played\");\n        result === \"p1\" && setScore1(score1 + 1);\n        result === \"p2\" && setScore2(score2 + 1);\n      });\n    }\n  }, [result, numOfRounds]);\n\n  function handleResult(result) {\n    if (game === \"multi\") {\n      result === \"Draw\" ? displayResultMsg(result + \"! 🤝\") : displayResultMsg(\"🥂 YOU WIN! 🎉\");\n      //   displayInfo(\"Click Replay ⬇️\");\n      incrementData(\"won\");\n      //   saveResult(result);\n    } else {\n      if (result === \"p1\") {\n        displayResultMsg(\"🥂 YOU WIN! 🎉\");\n        setScore1(score1 + 1);\n        incrementData(\"won\", \"played\");\n      }\n      if (result === \"p2\") {\n        displayResultMsg(\"😱 YOU LOST! 💩\");\n        setScore2(score2 + 1);\n        incrementData(\"played\");\n      }\n      if (result === \"Draw\") {\n        displayResultMsg(result + \"! 🤝\");\n        incrementData(\"played\");\n      }\n    }\n    displayInfo(\"Click Replay ⬇️\");\n    saveResult(result);\n  }\n\n  function handleReplay() {\n    !result && incrementData(\"played\");\n    ref.current.resetGrid(result);\n    setNumOfRounds(numOfRounds + 1);\n    displayResultMsg(\"\");\n    displayInfo(\"\");\n    saveResult(\"\");\n  }\n\n  const handleQuit = () => {\n    const blankGrid = JSON.stringify(ref.current.grid) === JSON.stringify(initialGrid);\n    if (!info && !result && !blankGrid) {\n      incrementData(\"played\");\n    }\n    if (game === \"multi\") window.location.reload(false); // when quit restart socket.\n    toggleGameMode(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          {/* SCORE DSIPLAY */}\n          <div className=\"col\">\n            <h6 data-testid=\"numOfRounds\" className=\"text-primary\">\n              Round: {numOfRounds}\n            </h6>\n            <h4>\n              <span data-testid=\"score1\" style={{ color: \"#f012be\" }}>\n                {score1}\n              </span>\n              <span className=\"text-primary\"> vs </span>\n              <span data-testid=\"score2\" className=\"text-success\">\n                {score2}\n              </span>\n            </h4>\n          </div>\n          {/* PLAYERS LEGEND */}\n          <div className=\"col\">\n            <h6 data-testid=\"p1Name\" className=\"player float-right\">\n              {player1Name ? player1Name : \"Waiting...\"}\n              <div style={{ background: \"#f012be\" }} className=\"indicator rounded ml-2\" />\n            </h6>\n            <h6 data-testid=\"p2Name\" className=\"player float-right\">\n              {player2Name ? player2Name : \"Waiting...\"}\n              <div className=\"bg-success indicator rounded ml-2\" />\n            </h6>\n          </div>\n        </div>\n      </div>\n\n      <Grid\n        ref={ref}\n        game={game}\n        initialGrid={initialGrid}\n        handleResult={handleResult}\n        opponent={opponent}\n        currentPlayerNum={currentPlayerNum}\n      />\n\n      {/* RESULT */}\n      <h4 data-testid=\"resultMsg\" className=\"text-center text-warning mt-4\">\n        {resultMsg}\n      </h4>\n\n      {/* INFO */}\n      <h5 data-testid=\"info\" className=\"text-center text-warning mt-4\">\n        {info}\n      </h5>\n\n      <Button\n        disabled={replayButton}\n        data-testid=\"replay\"\n        className=\"btn-warning w-100 mt-4\"\n        onClick={handleReplay}\n      >\n        Replay\n      </Button>\n      <Button data-testid=\"quit\" className=\"btn btn-warning w-100 mt-3 \" onClick={handleQuit}>\n        Quit\n      </Button>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Dashboard from \"./Dashboard\";\nimport Game from \"./game/Game\";\nimport { getGrid } from \"./game/help\";\nimport { SocketContext, socket } from \"../contexts/socket\";\nimport base from \"./../firebase\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nexport default function Page() {\n  // USER INFO\n  const { currentUser, logout } = useAuth();\n  const id = currentUser.uid;\n  const profileName = currentUser.displayName;\n\n  const location = useLocation();\n  const userName = location.state?.userName || profileName;\n  const history = useHistory();\n\n  const initialGrid = getGrid();\n  // const initialGrid = [\n  //   [null, null, null, null, null, null, null],\n  //   [null, null, null, null, null, null, null],\n  //   [\"p1\", null, null, null, null, null, null],\n  //   [\"p1\", null, null, null, null, null, null],\n  //   [\"p1\", \"p2\", \"p2\", \"p2\", null, null, null],\n  //   [\"p2\", \"p1\", \"p2\", \"p1\", \"p2\", \"p1\", \"p2\"],\n  // ];\n\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(id)) || {});\n  const [game, loadGame] = useState();\n\n  useEffect(() => {\n    const ref = base.syncState(id, {\n      context: {\n        setState: ({ data }) => setData({ ...data }),\n        state: { data },\n      },\n      state: \"data\",\n    });\n\n    const existingData = ref[\"context\"][\"state\"][\"data\"];\n    if (Object.keys(existingData).length === 0) {\n      base.post(id, {\n        data: { played: 0, won: 0 },\n      });\n      setData({ played: 0, won: 0 });\n    }\n\n    return () => {\n      base.removeBinding(ref);\n    };\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(id, JSON.stringify(data));\n  }, [data]);\n\n  function updateProfile() {\n    history.push(\"/update-profile\");\n  }\n\n  function toggleGameMode(mode) {\n    loadGame(mode);\n  }\n\n  function incrementData(key1, key2) {\n    let updatedData = { ...data, [key1]: data[key1] + 1 };\n    if (key2) updatedData = { ...updatedData, [key2]: data[key2] + 1 };\n    setData(updatedData);\n    base.post(id, {\n      data: updatedData,\n    });\n  }\n\n  return (\n    <>\n      {game ? (\n        <SocketContext.Provider value={socket}>\n          <Game\n            userName={userName}\n            game={game}\n            initialGrid={initialGrid}\n            incrementData={incrementData}\n            toggleGameMode={toggleGameMode}\n          />\n        </SocketContext.Provider>\n      ) : (\n        <Dashboard\n          toggleGameMode={toggleGameMode}\n          logout={logout}\n          updateProfile={updateProfile}\n          userName={userName}\n          played={data.played}\n          won={data.won}\n        />\n      )}\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function UpdateProfile() {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { currentUser, updatePassword, updateEmail } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (usernameRef.current.value !== currentUser.displayName) {\n      promises.push(currentUser.updateProfile({ displayName: usernameRef.current.value }));\n    }\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch(() => {\n        setError(\"Failed to update account\");\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={usernameRef}\n                required\n                defaultValue={currentUser.displayName}\n              />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Signup() {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value).then((cred) => {\n        cred.user.updateProfile({\n          displayName: usernameRef.current.value,\n        });\n      });\n      history.push(\"/\", { userName: usernameRef.current.value });\n    } catch {\n      setError(\"Failed to create an account\");\n      setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" ref={usernameRef} required />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Minimum 6 characters\"\n                ref={passwordRef}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account?{\" \"}\n        <Link className=\"text-decoration-none\" to=\"/login\">\n          Log In\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setLoading(false);\n      setError(\"Failed to log in\");\n    }\n  }\n\n  return (\n    <>\n      <h1 data-testid=\"title\" className=\"title text-center text-primary\">\n        Connect Four\n      </h1>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"btn-warning w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link className=\"text-decoration-none\" to=\"/forgot-password\">\n              Forgot Password?\n            </Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account?{\" \"}\n        <Link className=\"text-decoration-none\" to=\"/signup\">\n          Sign Up\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ForgotPassword() {\n  const emailRef = useRef();\n  const { resetPassword } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Failed to reset password\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\nimport Page from \"./components/Page\";\nimport UpdateProfile from \"./components/auth/UpdateProfile\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport ForgotPassword from \"./components/auth/ForgotPassword\";\nimport \"./app.css\";\n\nexport default function App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\", minWidth: \"400px\" }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Page} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}