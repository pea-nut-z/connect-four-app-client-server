{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/auth/PrivateRoute.js","components/Dashboard.js","components/game/SquareGrid.js","components/game/help.js","contexts/socket.js","components/game/Grid.js","components/game/Game.js","components/Page.js","components/auth/UpdateProfile.js","components/auth/Signup.js","components/auth/Login.js","components/auth/ForgotPassword.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","appId","auth","window","location","hostname","REACT_APP_TEST","database","useEmulator","disableWarnings","base","Rebase","createClass","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","PrivateRoute","Component","component","rest","render","props","to","Dashboard","toggleGameModeCb","updateProfile","userName","played","won","history","useHistory","error","setError","a","push","Card","className","Body","id","Alert","variant","Button","onClick","SquareGrid","colIdx","handleMove","data-testid","getGrid","rows","cols","grid","i","Array","fill","initialGrid","initialRowChart","numOfCol","length","maxRowIdx","rowChart","getRowChart","checkResult","row","col","rMins","rPlus","cMins","cPlus","up_down","left_right","upLeft_downRight","upRight_downLeft","up","down","left","right","upLeft","downRight","upRight","downLeft","some","count","includes","alphabeta","numOfCols","depth","isMaximizingPlayer","result","undefined","console","log","bestMove","bestDepth","Infinity","bestScore","c","r","depthAndScore","moveDepth","moveScore","SocketContext","socket","socketio","connect","forceNew","Grid","forwardRef","ref","game","handleResultCb","opponentName","thisPlayerNum","gameOver","setGrid","setRowChart","ready","setReady","thisPlayerColor","useMemo","opponentPlayerColor","client","useImperativeHandle","resetGrid","setTimeout","handleAiMove","huGrid","huRowChart","newGrid","map","slice","newRowChart","bestMoves","Math","floor","random","findAiMove","aiMoveRowIdx","aiMoveColIdx","rowValue","newRowsAvailable","rowIdx","emit","on","off","rowIndex","style","color","Game","incrementData","player1Name","setPlayer1Name","player2Name","setPlayer2Name","round","setRound","score1","setScore1","score2","setScore2","setGameOver","resultMsg","setResultMsg","info","setInfo","disableReplayBtn","setDisableReplayBtn","setThisPlayerNum","thisPlayerName","setThisPlayerName","useRef","useCallback","lastPlayer","score","handleReplayCb","playerNum","isBlankGrid","JSON","stringify","current","PreRound","player1","player2","playerName","alert","background","disabled","Page","useLocation","data","setData","loadGame","uid","state","displayName","syncState","context","setState","defaultValue","then","onFailure","removeBinding","mode","key1","key2","updatedData","post","err","UpdateProfile","usernameRef","emailRef","passwordRef","passwordConfirmRef","Form","onSubmit","e","preventDefault","promises","Promise","all","catch","Group","Label","Control","type","required","placeholder","Signup","cred","Login","ForgotPassword","message","setMessage","App","Container","minHeight","maxWidth","minWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d25e546.chunk.js","sourcesContent":["import Rebase from \"re-base\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nlet auth = app.auth();\n\n// USE EMULATORS IN TEST ENVIRONMENT\nif (window.location.hostname === \"localhost\" && process.env.REACT_APP_TEST) {\n  app.database().useEmulator(\"localhost\", 9000);\n  app.auth().useEmulator(\"http://localhost:9099\", { disableWarnings: false });\n}\n\nconst base = Rebase.createClass(app.database());\nexport { app, auth };\nexport default base;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    ></Route>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Dashboard({\n  toggleGameModeCb,\n  logout,\n  updateProfile,\n  userName,\n  played,\n  won,\n}) {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n\n  async function handleLogout() {\n    setError(\"\");\n    try {\n      await logout();\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <>\n      <Card className=\"box\">\n        <Card.Body>\n          <h2 id=\"userName\" className=\"text-center mb-4\">\n            Hello, {userName}!\n          </h2>\n          <div className=\"row\">\n            <h4 id=\"played\" className=\"col-6 text-center\">\n              🎮 ✖️ {played}\n            </h4>\n            <h4 id=\"won\" className=\"col-6 text-center\">\n              🏆 ✖️ {won}\n            </h4>\n          </div>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n\n          <Button\n            id=\"single\"\n            onClick={() => {\n              toggleGameModeCb(\"single\");\n            }}\n            className=\"btn btn-warning w-100 mt-3\"\n          >\n            Challenge Peanutbot\n          </Button>\n          <Button\n            id=\"multi\"\n            onClick={() => {\n              toggleGameModeCb(\"multi\");\n            }}\n            className=\"btn btn-warning w-100 mt-3\"\n          >\n            Play With A Friend\n          </Button>\n          <Button id=\"updateProfile\" className=\"btn btn-warning w-100 mt-3\" onClick={updateProfile}>\n            Update Profile\n          </Button>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button\n          id=\"logoutBtn\"\n          variant=\"link\"\n          className=\"text-decoration-none\"\n          onClick={handleLogout}\n        >\n          Log Out\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function SquareGrid({ value, colIdx, handleMove }) {\n  return (\n    <div className=\"square bg-primary\" onClick={() => handleMove(colIdx)}>\n      <div\n        id={colIdx === 0 ? \"testCol0\" : colIdx === 2 ? \"testCol2\" : \"\"}\n        data-testid=\"square\"\n        className={`circle ${value ? \"p\" + value : \"\"}`}\n      ></div>\n    </div>\n  );\n}\n","// const times = [];    // for checking runtime in development\nconst DEFAULT_ROWS = 6;\nconst DEFAULT_COLS = 7;\nconst FULL_COLUMN = 9; // Because the max standard number of rows is 8\n\nconst getGrid = function (rows = DEFAULT_ROWS, cols = DEFAULT_COLS) {\n  const grid = [];\n  let i = 0;\n  while (i < rows) {\n    grid.push(Array(cols).fill(0));\n    i++;\n  }\n  return grid;\n};\n\nexport const initialGrid = getGrid();\n\nfunction getRowChart(grid) {\n  const numOfCol = grid[0].length;\n  const maxRowIdx = grid.length - 1;\n  const rowChart = [];\n  let i = 0;\n  while (i < numOfCol) {\n    rowChart.push(maxRowIdx);\n    i++;\n  }\n  return rowChart;\n}\n\nexport const initialRowChart = getRowChart(getGrid());\n\nexport function checkResult(grid, row, col) {\n  const value = grid[row][col];\n  // INDEXES\n  let rMins = row - 1;\n  let rPlus = row + 1;\n  let cMins = col - 1;\n  let cPlus = col + 1;\n\n  // COUNTS\n  let up_down = 1;\n  let left_right = 1;\n  let upLeft_downRight = 1;\n  let upRight_downLeft = 1;\n\n  // FLAGS FOR COUNT INCREMENT\n  let up = true;\n  let down = true;\n  let left = true;\n  let right = true;\n  let upLeft = true;\n  let downRight = true;\n  let upRight = true;\n  let downLeft = true;\n\n  while (up || down || left || right || upLeft || downRight || upRight || downLeft) {\n    const counts = [up_down, left_right, upLeft_downRight, upRight_downLeft];\n    if (counts.some((count) => count >= 4)) return value;\n\n    if (up) {\n      grid[rMins]?.[col] === value ? up_down++ : (up = false);\n    }\n\n    if (down) {\n      grid[rPlus]?.[col] === value ? up_down++ : (down = false);\n    }\n\n    if (left) {\n      grid[row][cMins] === value ? left_right++ : (left = false);\n    }\n\n    if (right) {\n      grid[row][cPlus] === value ? left_right++ : (right = false);\n    }\n\n    if (upLeft) {\n      grid[rMins]?.[cMins] === value ? upLeft_downRight++ : (upLeft = false);\n    }\n\n    if (downRight) {\n      grid[rPlus]?.[cPlus] === value ? upLeft_downRight++ : (downRight = false);\n    }\n\n    if (upRight) {\n      grid[rMins]?.[cPlus] === value ? upRight_downLeft++ : (upRight = false);\n    }\n\n    if (downLeft) {\n      grid[rPlus]?.[cMins] === value ? upRight_downLeft++ : (downLeft = false);\n    }\n    rMins--;\n    rPlus++;\n    cMins--;\n    cPlus++;\n  }\n\n  const counts = [up_down, left_right, upLeft_downRight, upRight_downLeft];\n  if (counts.some((count) => count >= 4)) return value;\n  if (row === 0 && !grid[0].includes(0)) return \"Draw\";\n}\n\nexport function findAiMove(grid, rowChart) {\n  // const t0 = performance.now();\n  const maxDepth = 7;\n  const numOfCols = grid[0].length;\n  let bestMoves = [];\n  let bestDepth;\n  let bestScore = Infinity;\n\n  for (let c = 0; c < numOfCols; c++) {\n    if (rowChart[c] === FULL_COLUMN) continue;\n    let r = rowChart[c];\n    grid[r][c] = 2; // BOT'S MOVE\n    let depthAndScore = alphabeta(r, c, grid, numOfCols, rowChart, maxDepth, true); // GET HUMAN'S MOVE\n    rowChart[c] = r;\n    grid[r][c] = 0;\n    let [moveDepth, moveScore] = depthAndScore;\n    if (\n      moveScore < bestScore || // LOOK FOR LOWEST SCORE (-10)\n      (moveScore === bestScore && moveDepth < bestDepth && moveScore >= 0) || // POSITIVE SCORE - human is winning; look for min depth to delay human's win\n      (moveScore === bestScore && moveDepth > bestDepth && moveScore < 0) // NEGATIVE SCORE - bot is winning; look for max depth to speed up bot's win\n    ) {\n      bestMoves = [];\n      bestDepth = moveDepth;\n      bestScore = moveScore;\n      bestMoves.push([r, c]);\n    } else if (moveScore === bestScore && moveDepth === bestDepth) {\n      bestMoves.push([r, c]);\n    }\n  }\n  let randomMove = Math.floor(Math.random() * bestMoves.length);\n\n  // TO GET AVERAGE RUNTIME\n  // const t1 = performance.now();\n  // console.log(`It took ${t1 - t0} milliseconds.`);\n  // const time = t1 - t0;\n  // times.push(time);\n  // const total = times.reduce((acc, time) => {\n  //   return acc + time;\n  // }, 0);\n  // const average = total / times.length;\n  // console.log({ average });\n\n  return bestMoves[randomMove];\n}\n\nfunction alphabeta(row, col, grid, numOfCols, rowChart, depth, isMaximizingPlayer) {\n  let result = checkResult(grid, row, col);\n  switch (result) {\n    case 1:\n      return [depth, 10];\n    case 2:\n      return [depth, -10];\n    case \"Draw\":\n      return [depth, 0];\n    case undefined:\n      if (depth === 0) return [depth, 0];\n      rowChart[col] = row === 0 ? 9 : row - 1;\n      break;\n    default:\n      console.log(\"uncaught result\", result);\n  }\n\n  if (isMaximizingPlayer) {\n    let bestMove = [];\n    let bestDepth = Infinity;\n    let bestScore = -Infinity;\n    for (let c = 0; c < numOfCols; c++) {\n      if (rowChart[c] === FULL_COLUMN) continue;\n      let r = rowChart[c];\n      grid[r][c] = 1; // HUMAN'S MOVE\n      let depthAndScore = alphabeta(r, c, grid, numOfCols, rowChart, depth - 1, false); // GET BOT'S MOVE\n      rowChart[c] = r;\n      grid[r][c] = 0;\n      let [moveDepth, moveScore] = depthAndScore;\n      if (\n        moveScore > bestScore || // LOOK FOR HIGHEST SCORE (10)\n        (moveScore === bestScore && moveDepth > bestDepth && moveScore >= 0) || // POSITIVE SCORE - human is winning; look for max depth to speed up human's win\n        (moveScore === bestScore && moveDepth < bestDepth && moveScore < 0) // NEGATIVE SCORE - bot is winning; look for min depth to delay bot's win\n      ) {\n        bestDepth = moveDepth;\n        bestScore = moveScore;\n        bestMove = depthAndScore;\n      }\n    }\n    return bestMove;\n  } else {\n    let bestMove = [];\n    let bestDepth = Infinity;\n    let bestScore = Infinity;\n    for (let c = 0; c < numOfCols; c++) {\n      if (rowChart[c] === FULL_COLUMN) continue;\n      let r = rowChart[c];\n      grid[r][c] = 2; // BOT'S MOVE\n      let depthAndScore = alphabeta(r, c, grid, numOfCols, rowChart, depth - 1, true); // GET HUMAN's MOVE\n      rowChart[c] = r;\n      grid[r][c] = 0;\n      let [moveDepth, moveScore] = depthAndScore;\n      if (\n        moveScore < bestScore || // LOOK FOR LOWEST SCORE (-10)\n        (moveScore === bestScore && moveDepth < bestDepth && moveScore >= 0) || // POSITIVE SCORE - human is winning; look for min depth to delay human's win\n        (moveScore === bestScore && moveDepth > bestDepth && moveScore < 0) // NEGATIVE SCORE - bot is winning; look for max depth to speed up bot's win\n      ) {\n        bestDepth = moveDepth;\n        bestScore = moveScore;\n        bestMove = depthAndScore;\n      }\n    }\n    return bestMove;\n  }\n}\n","import socketio from \"socket.io-client\";\nimport React from \"react\";\nexport const SocketContext = React.createContext();\nexport const socket = socketio.connect(\"/\", { forceNew: true });\n","import React, {\n  useState,\n  useImperativeHandle,\n  forwardRef,\n  useEffect,\n  useContext,\n  useMemo,\n} from \"react\";\nimport SquareGrid from \"./SquareGrid\";\nimport { checkResult, findAiMove, initialGrid, initialRowChart } from \"./help\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport const Grid = forwardRef(\n  ({ game, handleResultCb, opponentName, thisPlayerNum, gameOver }, ref) => {\n    const [grid, setGrid] = useState(initialGrid);\n    const [rowChart, setRowChart] = useState(initialRowChart);\n    const [ready, setReady] = useState(game === \"single\" ? true : false);\n\n    const thisPlayerColor = useMemo(\n      () => (thisPlayerNum === 1 ? \"#f012be\" : \"#2ecc40\"),\n      [thisPlayerNum]\n    );\n\n    const opponentPlayerColor = useMemo(\n      () => (thisPlayerNum === 1 ? \"#2ecc40\" : \"#f012be\"),\n      [thisPlayerNum]\n    );\n\n    const client = useContext(SocketContext);\n    useImperativeHandle(ref, () => ({\n      grid,\n      resetGrid,\n    }));\n\n    const resetGrid = () => {\n      setGrid(initialGrid);\n      setRowChart(initialRowChart);\n      if (game === \"single\" && !ready) {\n        setTimeout(() => {\n          handleAiMove(initialGrid, initialRowChart);\n        }, 100);\n      }\n    };\n\n    const handleAiMove = (huGrid, huRowChart) => {\n      const newGrid = huGrid.map((a) => a.slice());\n      const newRowChart = huRowChart.slice();\n      const [aiMoveRowIdx, aiMoveColIdx] = findAiMove(newGrid, newRowChart);\n      newGrid[aiMoveRowIdx][aiMoveColIdx] = 2;\n      setGrid(newGrid);\n      const result = checkResult(newGrid, aiMoveRowIdx, aiMoveColIdx);\n      if (result) {\n        handleResultCb(result);\n      } else {\n        const rowValue = aiMoveRowIdx === 0 ? 9 : aiMoveRowIdx - 1;\n        newRowChart[aiMoveColIdx] = rowValue;\n        setRowChart(newRowChart);\n        setReady(true);\n      }\n    };\n\n    const handleMove = (colIdx) => {\n      if (!gameOver && ready) {\n        if (rowChart[colIdx] === 9) return; // 9 means full column\n        let newRowsAvailable;\n        const newGrid = grid.map((a) => a.slice());\n        const rowIdx = rowChart[colIdx];\n        newGrid[rowIdx][colIdx] = thisPlayerNum;\n        setGrid(newGrid);\n        const result = checkResult(newGrid, rowIdx, colIdx);\n        if (result) {\n          handleResultCb(result, thisPlayerNum);\n        } else {\n          setReady(false);\n          newRowsAvailable = rowChart.slice();\n          const rowValue = rowIdx === 0 ? 9 : rowIdx - 1;\n          newRowsAvailable[colIdx] = rowValue;\n          setRowChart(newRowsAvailable);\n          if (game === \"single\") {\n            setTimeout(() => {\n              handleAiMove(newGrid, newRowsAvailable);\n            }, 100);\n          }\n        }\n        game === \"multi\" &&\n          client.emit(\"update-grid\", { grid: newGrid, rowChart: newRowsAvailable, result });\n      }\n    };\n\n    client.on(\"go-first\", () => {\n      setReady(true);\n      setGrid(initialGrid);\n      setRowChart(initialRowChart);\n    });\n\n    client.on(\"update-grid\", ({ grid, rowChart, result }) => {\n      if (!result) setReady(true);\n      setGrid(grid);\n      setRowChart(rowChart);\n    });\n\n    useEffect(() => {\n      if (game === \"multi\") {\n        client.emit(\"go-first\");\n      }\n      return () => {\n        client.off(\"go-first\");\n      };\n    }, [client, game]);\n\n    return (\n      <>\n        {/* Grid */}\n        <div id=\"boarder\">\n          <div id=\"grid\" className=\"grid\">\n            {grid.map((row, rowIndex) => (\n              <div className=\"row\" key={rowIndex}>\n                {row.map((value, colIdx) => (\n                  <SquareGrid key={colIdx} value={value} colIdx={colIdx} handleMove={handleMove} />\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* WHO's TURN */}\n        <h4\n          data-testid=\"turn\"\n          className=\"text-center mt-4\"\n          style={{ color: ready ? thisPlayerColor : opponentPlayerColor }}\n        >\n          {!opponentName && \"Waiting for a player to join...\"}\n          {gameOver ? \"\" : ready ? \"Your turn\" : `Waiting for ${opponentName}...`}\n        </h4>\n      </>\n    );\n  }\n);\n","import React, { useState, useEffect, useRef, useCallback, useContext, useMemo } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Grid } from \"./Grid\";\nimport { initialGrid } from \"../game/help\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport default function Game({ userName, game, incrementData, toggleGameModeCb }) {\n  const [player1Name, setPlayer1Name] = useState(\"\");\n  const [player2Name, setPlayer2Name] = useState(\"\");\n  const [round, setRound] = useState(1);\n  const [score1, setScore1] = useState(0);\n  const [score2, setScore2] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [resultMsg, setResultMsg] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const [disableReplayBtn, setDisableReplayBtn] = useState(true);\n  const [thisPlayerNum, setThisPlayerNum] = useState(1);\n  const [thisPlayerName, setThisPlayerName] = useState(\"\");\n  const opponentName = useMemo(\n    () => (thisPlayerNum === 1 ? player2Name : player1Name),\n    [player1Name, player2Name, thisPlayerNum]\n  );\n  const client = useContext(SocketContext);\n  const ref = useRef();\n\n  const handleResultCb = useCallback(\n    (result, lastPlayer) => {\n      if (result === thisPlayerNum) {\n        setResultMsg(\"🥂 YOU WIN! 🎉\");\n        incrementData(\"won\");\n      } else if (result === \"Draw\") {\n        setResultMsg(result + \"! 🤝\");\n      } else {\n        setResultMsg(\"😱 YOU LOST! 💩\");\n      }\n\n      if (lastPlayer === thisPlayerNum) client.emit(\"handle-result\", { result, lastPlayer });\n      if (lastPlayer === thisPlayerNum || game === \"single\") setInfo(\"Click Replay ⬇️\");\n      if (game === \"multi\" && lastPlayer !== thisPlayerNum) {\n        setInfo(`Waiting for ${thisPlayerName} to restart the game...`);\n        setDisableReplayBtn(true);\n      }\n      result === thisPlayerNum ? incrementData(\"played\", \"won\") : incrementData(\"played\");\n      result === 1 && setScore1((score) => score + 1);\n      result === 2 && setScore2((score) => score + 1);\n      setGameOver(true);\n    },\n    [client, game, incrementData, thisPlayerName, thisPlayerNum]\n  );\n\n  const handleReplayCb = useCallback(\n    (playerNum) => {\n      const isBlankGrid = JSON.stringify(ref.current.grid) === JSON.stringify(initialGrid);\n      if (!gameOver && !isBlankGrid && playerNum === thisPlayerNum) incrementData(\"played\"); //replay in the middle of the game\n      if (game === \"multi\" && playerNum === thisPlayerNum) {\n        client.emit(\"handle-replay\", { playerNum });\n      }\n      ref.current.resetGrid();\n      setGameOver(false);\n      setRound((PreRound) => PreRound + 1);\n      setResultMsg(\"\");\n      setInfo(\"\");\n      setDisableReplayBtn(false);\n    },\n    [client, incrementData, thisPlayerNum, game, gameOver]\n  );\n\n  const handleQuit = () => {\n    const isBlankGrid = JSON.stringify(ref.current.grid) === JSON.stringify(initialGrid);\n    if (!info && !isBlankGrid) incrementData(\"played\");\n    client.emit(\"player-disconnected\", { playerNum: thisPlayerNum });\n    toggleGameModeCb(\"\");\n  };\n\n  client.on(\"player-has-joined\", ({ player1, player2 }) => {\n    player1 && setPlayer1Name(player1);\n    player2 && setPlayer2Name(player2);\n    if (player1 && player2) {\n      setScore1(0);\n      setScore2(0);\n      setInfo(\"\");\n      setRound(1);\n      setGameOver(false);\n      setDisableReplayBtn(false);\n    }\n  });\n\n  client.on(\"player-disconnected\", ({ playerName, playerNum }) => {\n    playerNum === 1 ? setPlayer1Name(\"\") : setPlayer2Name(\"\");\n    setInfo(`${playerName} left💨`);\n    setResultMsg(\"\");\n    setGameOver(true);\n    setDisableReplayBtn(true);\n  });\n\n  useEffect(() => {\n    if (game === \"single\") {\n      setGameOver(false);\n      setDisableReplayBtn(false);\n      setPlayer1Name(userName);\n      setPlayer2Name(\"Peanutbot\");\n    }\n\n    if (game === \"multi\") {\n      client.emit(\"player-connecting\", { userName }, () => {});\n\n      client.on(\"full-server\", () => {\n        toggleGameModeCb(\"\");\n        alert(\"Sorry, server is full.\");\n      });\n\n      client.on(\"player-1-connected\", () => {\n        setThisPlayerName(userName);\n      });\n\n      client.on(\"player-2-connected\", () => {\n        setThisPlayerNum(2);\n        setThisPlayerName(userName);\n      });\n\n      return () => {\n        client.off(\"player-has-joined\");\n        client.off(\"player-disconnected\");\n        client.off(\"full-server\", toggleGameModeCb);\n        client.off(\"player-1-connected\");\n        client.off(\"player-2-connected\");\n      };\n    }\n  }, [client, game, userName, toggleGameModeCb]);\n\n  useEffect(() => {\n    if (game === \"multi\") {\n      client.on(\"handle-result\", ({ result, lastPlayer }) => {\n        handleResultCb(result, lastPlayer);\n      });\n\n      client.on(\"handle-replay\", (playerNum) => {\n        handleReplayCb(playerNum);\n      });\n    }\n    return () => {\n      client.off(\"handle-result\", handleResultCb);\n      client.off(\"handle-replay\", handleReplayCb);\n    };\n  }, [client, game, handleResultCb, handleReplayCb]);\n\n  return (\n    <div className=\"box\">\n      <div className=\"row\">\n        {/* SCORE DSIPLAY */}\n        <div className=\"col\">\n          <h6 data-testid=\"round\" className=\"text-primary\">\n            Round: {round}\n          </h6>\n          <h4>\n            <span data-testid=\"score1\" style={{ color: \"#f012be\" }}>\n              {score1}\n            </span>\n            <span className=\"text-primary\"> vs </span>\n            <span data-testid=\"score2\" className=\"text-success\">\n              {score2}\n            </span>\n          </h4>\n        </div>\n        {/* PLAYERS LEGEND */}\n        <div className=\"col align-self-end\">\n          <h6 data-testid=\"p1Name\" className=\"player row justify-content-end\">\n            {player1Name ? player1Name : \"Waiting...\"}\n            <div style={{ background: \"#f012be\" }} className=\"indicator rounded ml-2\" />\n          </h6>\n          <h6 data-testid=\"p2Name\" className=\"player row justify-content-end\">\n            {player2Name ? player2Name : \"Waiting...\"}\n            <div className=\"bg-success indicator rounded ml-2\" />\n          </h6>\n        </div>\n      </div>\n\n      <Grid\n        ref={ref}\n        game={game}\n        handleResultCb={handleResultCb}\n        opponentName={opponentName}\n        thisPlayerNum={thisPlayerNum}\n        gameOver={gameOver}\n      />\n\n      {/* RESULT */}\n      <h4 data-testid=\"resultMsg\" className=\"text-center text-warning mt-4\">\n        {resultMsg}\n      </h4>\n\n      {/* INFO */}\n      <h5 data-testid=\"info\" className=\"text-center text-warning mt-4\">\n        {info}\n      </h5>\n\n      <Button\n        disabled={disableReplayBtn}\n        id=\"replay\"\n        data-testid=\"replay\"\n        className=\"btn-warning w-100 mt-4\"\n        onClick={() => handleReplayCb(thisPlayerNum)}\n      >\n        Replay\n      </Button>\n      <Button\n        id=\"quitBtn\"\n        data-testid=\"quit\"\n        className=\"btn btn-warning w-100 mt-3 \"\n        onClick={handleQuit}\n      >\n        Quit\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Dashboard from \"./Dashboard\";\nimport Game from \"./game/Game\";\nimport { SocketContext, socket } from \"../contexts/socket\";\nimport base from \"./../firebase\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nexport default function Page() {\n  const history = useHistory();\n  const location = useLocation();\n  const { currentUser, logout } = useAuth();\n\n  const [data, setData] = useState({});\n  const [game, loadGame] = useState();\n  const [id] = useState(currentUser.uid);\n  const [userName] = useState(location.state?.userName || currentUser.displayName);\n\n  useEffect(() => {\n    const ref = base.syncState(id, {\n      context: {\n        setState: (data) => setData(data[\"data\"]),\n      },\n      state: \"data\",\n      defaultValue: { played: 0, won: 0 },\n      then: () => console.log(\"data synced\"),\n      onFailure: () => console.log(\"access denied\"),\n    });\n\n    return () => {\n      base.removeBinding(ref);\n    };\n  }, [id]);\n\n  const toggleGameModeCb = useCallback((mode) => {\n    loadGame(mode);\n  }, []);\n\n  function updateProfile() {\n    history.push(\"/update-profile\");\n  }\n\n  function incrementData(key1, key2) {\n    let updatedData = { ...data, [key1]: data[key1] + 1 };\n    if (key2) updatedData = { ...updatedData, [key2]: data[key2] + 1 };\n    base.post(id, {\n      data: updatedData,\n      then(err) {\n        if (err) console.log(err);\n      },\n    });\n  }\n\n  return (\n    <>\n      {game ? (\n        <SocketContext.Provider value={socket}>\n          <Game\n            userName={userName}\n            game={game}\n            incrementData={incrementData}\n            toggleGameModeCb={toggleGameModeCb}\n          />\n        </SocketContext.Provider>\n      ) : (\n        <Dashboard\n          toggleGameModeCb={toggleGameModeCb}\n          logout={logout}\n          updateProfile={updateProfile}\n          userName={userName}\n          played={data.played}\n          won={data.won}\n        />\n      )}\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function UpdateProfile() {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { currentUser, updatePassword, updateEmail } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (usernameRef.current.value !== currentUser.displayName) {\n      promises.push(currentUser.updateProfile({ displayName: usernameRef.current.value }));\n    }\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch(() => {\n        setError(\"Failed to update account\");\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                id=\"usernameInput\"\n                type=\"text\"\n                ref={usernameRef}\n                required\n                defaultValue={currentUser.displayName}\n              />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button id=\"updateBtn\" disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link id=\"cancelLink\" to=\"/\">\n          Cancel\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Signup() {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value).then((cred) => {\n        cred.user.updateProfile({\n          displayName: usernameRef.current.value,\n        });\n      });\n      history.push(\"/\", { userName: usernameRef.current.value });\n    } catch {\n      setError(\"Failed to create an account\");\n      setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control id=\"nameInput\" type=\"text\" ref={usernameRef} required />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control id=\"emailInput\" type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                id=\"passwordInput\"\n                type=\"password\"\n                placeholder=\"Minimum 6 characters\"\n                ref={passwordRef}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                id=\"confirmPasswordInput\"\n                type=\"password\"\n                ref={passwordConfirmRef}\n                required\n              />\n            </Form.Group>\n            <Button id=\"signupBtn\" disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account?{\" \"}\n        <Link className=\"text-decoration-none\" to=\"/login\">\n          Log In\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setLoading(false);\n      setError(\"Failed to log in\");\n    }\n  }\n\n  return (\n    <>\n      <h1 data-testid=\"title\" className=\"title text-center text-primary\">\n        Connect Four\n      </h1>\n      <Card className=\"box\">\n        <Card.Body>\n          {error && (\n            <Alert id=\"error\" variant=\"danger\">\n              {error}\n            </Alert>\n          )}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control id=\"emailInput\" type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control id=\"passwordInput\" type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button id=\"loginBtn\" disabled={loading} className=\"btn-warning w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link className=\"text-decoration-none\" to=\"/forgot-password\">\n              Forgot Password?\n            </Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account?{\" \"}\n        <Link id=\"signupLink\" className=\"text-decoration-none\" to=\"/signup\">\n          Sign Up\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ForgotPassword() {\n  const emailRef = useRef();\n  const { resetPassword } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Failed to reset password\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\nimport Page from \"./components/Page\";\nimport UpdateProfile from \"./components/auth/UpdateProfile\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport ForgotPassword from \"./components/auth/ForgotPassword\";\nimport \"./app.css\";\n\nexport default function App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\", minWidth: \"400px\" }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Page} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"firebase/auth\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}