[{"/Users/paulinez/connect-four/client/src/index.js":"1","/Users/paulinez/connect-four/client/src/contexts/AuthContext.js":"2","/Users/paulinez/connect-four/client/src/firebase.js":"3","/Users/paulinez/connect-four/client/src/App.js":"4","/Users/paulinez/connect-four/client/src/components/Game/help.js":"5","/Users/paulinez/connect-four/client/src/components/Game/SquareGrid.js":"6","/Users/paulinez/connect-four/client/src/components/auth/Login.js":"7","/Users/paulinez/connect-four/client/src/components/auth/PrivateRoute.js":"8","/Users/paulinez/connect-four/client/src/components/auth/ForgotPassword.js":"9","/Users/paulinez/connect-four/client/src/components/auth/UpdateProfile.js":"10","/Users/paulinez/connect-four/client/src/components/game/help.js":"11","/Users/paulinez/connect-four/client/src/components/game/SquareGrid.js":"12","/Users/paulinez/connect-four/client/src/components/auth/Signup.js":"13","/Users/paulinez/connect-four/client/src/components/Dashboard.js":"14","/Users/paulinez/connect-four/client/src/components/game/Game.js":"15","/Users/paulinez/connect-four/client/src/components/game/Grid.js":"16","/Users/paulinez/connect-four/client/src/components/Page.js":"17","/Users/paulinez/connect-four/client/src/contexts/socket.js":"18"},{"size":306,"mtime":1622142968805,"results":"19","hashOfConfig":"20"},{"size":1280,"mtime":1622149469381,"results":"21","hashOfConfig":"20"},{"size":864,"mtime":1622154120390,"results":"22","hashOfConfig":"20"},{"size":1281,"mtime":1612834119758,"results":"23","hashOfConfig":"20"},{"size":5783,"mtime":1612763864540,"results":"24","hashOfConfig":"20"},{"size":261,"mtime":1612041743315,"results":"25","hashOfConfig":"20"},{"size":2143,"mtime":1622232367583,"results":"26","hashOfConfig":"20"},{"size":423,"mtime":1612818247461,"results":"27","hashOfConfig":"20"},{"size":1676,"mtime":1612818248352,"results":"28","hashOfConfig":"20"},{"size":3095,"mtime":1622233516990,"results":"29","hashOfConfig":"20"},{"size":4598,"mtime":1620676320434,"results":"30","hashOfConfig":"20"},{"size":282,"mtime":1618983698517,"results":"31","hashOfConfig":"20"},{"size":2783,"mtime":1622167197388,"results":"32","hashOfConfig":"20"},{"size":1907,"mtime":1622171286384,"results":"33","hashOfConfig":"20"},{"size":6693,"mtime":1622172575546,"results":"34","hashOfConfig":"20"},{"size":3319,"mtime":1622184154234,"results":"35","hashOfConfig":"20"},{"size":2696,"mtime":1622234092360,"results":"36","hashOfConfig":"20"},{"size":205,"mtime":1622001829569,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1wysr4h",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/paulinez/connect-four/client/src/index.js",["79"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["80","81"],"/Users/paulinez/connect-four/client/src/contexts/AuthContext.js",[],"/Users/paulinez/connect-four/client/src/firebase.js",[],"/Users/paulinez/connect-four/client/src/App.js",[],"/Users/paulinez/connect-four/client/src/components/Game/help.js",[],["82","83"],"/Users/paulinez/connect-four/client/src/components/Game/SquareGrid.js",[],"/Users/paulinez/connect-four/client/src/components/auth/Login.js",[],"/Users/paulinez/connect-four/client/src/components/auth/PrivateRoute.js",[],"/Users/paulinez/connect-four/client/src/components/auth/ForgotPassword.js",[],"/Users/paulinez/connect-four/client/src/components/auth/UpdateProfile.js",[],"/Users/paulinez/connect-four/client/src/components/game/help.js",[],"/Users/paulinez/connect-four/client/src/components/game/SquareGrid.js",[],"/Users/paulinez/connect-four/client/src/components/auth/Signup.js",[],"/Users/paulinez/connect-four/client/src/components/Dashboard.js",[],"/Users/paulinez/connect-four/client/src/components/game/Game.js",["84","85"],"import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Grid } from \"./Grid\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport default function Game({ userName, game, initialGrid, incrementData, toggleGameMode }) {\n  const [player1Name, assignPlayer1Name] = useState(\"\");\n  const [player2Name, assignPlayer2Name] = useState(\"\");\n  const [currentPlayerNum, setCurrentPlayerNum] = useState(\"p1\");\n  const [currentPlayerName, setCurrentPlayerName] = useState(\"\");\n  const [numOfRounds, setNumOfRounds] = useState(1);\n  const [score1, setScore1] = useState(0);\n  const [score2, setScore2] = useState(0);\n  const [result, saveResult] = useState(\"\");\n  const [resultMsg, displayResultMsg] = useState(\"\");\n  const [info, displayInfo] = useState(\"\");\n  const [replayButton, disableReplayButton] = useState(false);\n\n  const opponent = currentPlayerNum === \"p1\" ? player2Name : player1Name;\n  const client = useContext(SocketContext);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (game === \"single\") {\n      assignPlayer1Name(userName);\n      assignPlayer2Name(\"Peanutbot\");\n    }\n\n    if (game === \"multi\") {\n      client.on(\"full-server\", () => {\n        toggleGameMode(\"\");\n        alert(\"Sorry, server is full.\");\n      });\n\n      client.emit(\"player-connecting\", { userName });\n\n      client.on(\"player-1-connected\", (player2) => {\n        assignPlayer1Name(userName);\n        setCurrentPlayerName(userName);\n        player2 && assignPlayer2Name(player2);\n      });\n\n      client.on(\"player-2-connected\", (player1) => {\n        assignPlayer2Name(userName);\n        setCurrentPlayerName(userName);\n        setCurrentPlayerNum(\"p2\");\n        assignPlayer1Name(player1);\n      });\n\n      client.on(\"player-has-joined\", ({ userName, playerIndex }) => {\n        playerIndex === 0 ? assignPlayer1Name(userName) : assignPlayer2Name(userName);\n        setScore1(0);\n        setScore2(0);\n      });\n\n      //   handle disconnect\n      client.on(\"player-disconnected\", ({ name, num }) => {\n        num === 0 ? assignPlayer1Name(\"\") : assignPlayer2Name(\"\");\n        displayInfo(`${name} left💨`);\n      });\n      return () => client.disconnect(currentPlayerName);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (game === \"multi\") {\n      // to all clients except sender\n      client.emit(\"update-result-display-and-rounds\", {\n        result,\n        currentPlayerName,\n        numOfRounds,\n      });\n      client.on(\"update-result-display-and-rounds\", ({ result, currentPlayerName, numOfRounds }) => {\n        setNumOfRounds(numOfRounds);\n        if (result) {\n          result === \"Draw\"\n            ? displayResultMsg(result + \"! 🤝\")\n            : displayResultMsg(\"😱 YOU LOST! 💩\");\n          displayInfo(`Waiting for ${currentPlayerName} to restart the game...`);\n          disableReplayButton(true);\n        } else {\n          displayResultMsg(\"\");\n          displayInfo(\"\");\n          disableReplayButton(false);\n        }\n      });\n\n      // to all clients\n      client.emit(\"update-score\", { result });\n      client.on(\"update-score\", ({ result }) => {\n        result && incrementData(\"played\");\n        result === \"p1\" && setScore1(score1 + 1);\n        result === \"p2\" && setScore2(score2 + 1);\n      });\n    }\n  }, [result, numOfRounds]);\n\n  function handleResult(result) {\n    if (game === \"multi\") {\n      result === \"Draw\" ? displayResultMsg(result + \"! 🤝\") : displayResultMsg(\"🥂 YOU WIN! 🎉\");\n      //   displayInfo(\"Click Replay ⬇️\");\n      incrementData(\"won\");\n      //   saveResult(result);\n    } else {\n      if (result === \"p1\") {\n        displayResultMsg(\"🥂 YOU WIN! 🎉\");\n        setScore1(score1 + 1);\n        incrementData(\"won\", \"played\");\n      }\n      if (result === \"p2\") {\n        displayResultMsg(\"😱 YOU LOST! 💩\");\n        setScore2(score2 + 1);\n        incrementData(\"played\");\n      }\n      if (result === \"Draw\") {\n        displayResultMsg(result + \"! 🤝\");\n        incrementData(\"played\");\n      }\n    }\n    displayInfo(\"Click Replay ⬇️\");\n    saveResult(result);\n  }\n\n  function handleReplay() {\n    !result && incrementData(\"played\");\n    ref.current.resetGrid(result);\n    setNumOfRounds(numOfRounds + 1);\n    displayResultMsg(\"\");\n    displayInfo(\"\");\n    saveResult(\"\");\n  }\n\n  const handleQuit = () => {\n    const blankGrid = JSON.stringify(ref.current.grid) === JSON.stringify(initialGrid);\n    if (!info && !result && !blankGrid) {\n      incrementData(\"played\");\n    }\n    if (game === \"multi\") window.location.reload(false); // when quit restart socket.\n    toggleGameMode(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          {/* SCORE DSIPLAY */}\n          <div className=\"col\">\n            <h6 data-testid=\"numOfRounds\" className=\"text-primary\">\n              Round: {numOfRounds}\n            </h6>\n            <h4>\n              <span data-testid=\"score1\" style={{ color: \"#f012be\" }}>\n                {score1}\n              </span>\n              <span className=\"text-primary\"> vs </span>\n              <span data-testid=\"score2\" className=\"text-success\">\n                {score2}\n              </span>\n            </h4>\n          </div>\n          {/* PLAYERS LEGEND */}\n          <div className=\"col align-self-end\">\n            <h6 data-testid=\"p1Name\" className=\"player row justify-content-end\">\n              {player1Name ? player1Name : \"Waiting...\"}\n              <div style={{ background: \"#f012be\" }} className=\"indicator rounded ml-2\" />\n            </h6>\n            <h6 data-testid=\"p2Name\" className=\"player row justify-content-end\">\n              {player2Name ? player2Name : \"Waiting...\"}\n              <div className=\"bg-success indicator rounded ml-2\" />\n            </h6>\n          </div>\n        </div>\n      </div>\n\n      <Grid\n        ref={ref}\n        game={game}\n        initialGrid={initialGrid}\n        handleResult={handleResult}\n        opponent={opponent}\n        currentPlayerNum={currentPlayerNum}\n      />\n\n      {/* RESULT */}\n      <h4 data-testid=\"resultMsg\" className=\"text-center text-warning mt-4\">\n        {resultMsg}\n      </h4>\n\n      {/* INFO */}\n      <h5 data-testid=\"info\" className=\"text-center text-warning mt-4\">\n        {info}\n      </h5>\n\n      <Button\n        disabled={replayButton}\n        data-testid=\"replay\"\n        className=\"btn-warning w-100 mt-4\"\n        onClick={handleReplay}\n      >\n        Replay\n      </Button>\n      <Button\n        id=\"quitBtn\"\n        data-testid=\"quit\"\n        className=\"btn btn-warning w-100 mt-3 \"\n        onClick={handleQuit}\n      >\n        Quit\n      </Button>\n    </>\n  );\n}\n","/Users/paulinez/connect-four/client/src/components/game/Grid.js",["86"],"import React, { useState, useImperativeHandle, forwardRef, useEffect, useContext } from \"react\";\nimport SquareGrid from \"./SquareGrid\";\nimport { checkResult, findAValidMove, findAiMove } from \"./help\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport const Grid = forwardRef(\n  ({ game, initialGrid, handleResult, opponent, currentPlayerNum }, ref) => {\n    const blankGrid = JSON.parse(JSON.stringify(initialGrid));\n    const [grid, setGrid] = useState(blankGrid);\n\n    const [gameOver, setGameOver] = useState(false);\n    const [ready, toggleReady] = useState(true);\n    const [thisTurn, endThisTurn] = useState();\n    const client = useContext(SocketContext);\n    const currentPlayerColor = currentPlayerNum === \"p1\" ? \"#f012be\" : \"#2ecc40\";\n    const opponentPlayerColor = currentPlayerNum === \"p1\" ? \"#2ecc40\" : \"#f012be\";\n\n    useImperativeHandle(ref, () => ({\n      grid,\n      resetGrid,\n    }));\n\n    const resetGrid = (result) => {\n      if (game === \"single\" && result === \"p1\") {\n        toggleReady(true);\n      }\n      setGrid(initialGrid);\n      setGameOver(false);\n      endThisTurn(!thisTurn);\n    };\n\n    useEffect(() => {\n      if (!gameOver && game === \"single\" && !ready) {\n        let newGrid = grid.slice();\n        setTimeout(() => {\n          const [aiMoveRowIdx, aiMoveColIdx] = findAiMove(newGrid);\n          newGrid[aiMoveRowIdx][aiMoveColIdx] = \"p2\";\n          setGrid(newGrid);\n          let result = checkResult(newGrid);\n          if (result) {\n            setGameOver(true);\n            handleResult(result);\n          } else {\n            toggleReady(!ready);\n          }\n        }, 500);\n      }\n\n      // to all clients except sender\n      if (game === \"multi\") {\n        toggleReady(!ready);\n        client.emit(\"update-grid\", { grid, gameOver, ready });\n        client.on(\"update-grid\", ({ grid, gameOver, ready }) => {\n          setGameOver(gameOver);\n          setGrid(grid);\n          toggleReady(ready);\n        });\n      }\n    }, [thisTurn]);\n\n    const handleMove = (colIdx) => {\n      if (!gameOver && ready) {\n        let newGrid = grid.slice();\n        const rowIdx = findAValidMove(newGrid, colIdx);\n        newGrid[rowIdx][colIdx] = currentPlayerNum;\n        setGrid(newGrid);\n        let result = checkResult(newGrid);\n        result && setGameOver(true);\n        result && handleResult(result);\n        game === \"single\" && toggleReady(false);\n        endThisTurn(!thisTurn);\n      }\n    };\n\n    return (\n      <>\n        {/* Grid */}\n        <div id=\"boarder\">\n          <div id=\"grid\">\n            {grid.map((row, rowIndex) => (\n              <div className=\"row\" key={rowIndex}>\n                {row.map((value, colIdx) => (\n                  <SquareGrid key={colIdx} value={value} colIdx={colIdx} handleMove={handleMove} />\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* WHO's TURN */}\n        <h4\n          className=\"text-center mt-4\"\n          style={{ color: ready ? currentPlayerColor : opponentPlayerColor }}\n        >\n          {gameOver || !opponent\n            ? \"\"\n            : ready\n            ? \"Your turn\"\n            : opponent\n            ? `Waiting for ${opponent}...`\n            : \"Waiting for a player to join...\"}\n        </h4>\n      </>\n    );\n  }\n);\n","/Users/paulinez/connect-four/client/src/components/Page.js",["87","88"],"/Users/paulinez/connect-four/client/src/contexts/socket.js",[],{"ruleId":"89","severity":1,"message":"90","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":16},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":64,"column":6,"nodeType":"101","endLine":64,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":97,"column":6,"nodeType":"101","endLine":97,"endColumn":27,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":60,"column":8,"nodeType":"101","endLine":60,"endColumn":18,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":52,"column":6,"nodeType":"101","endLine":52,"endColumn":8,"suggestions":"108"},{"ruleId":"99","severity":1,"message":"109","line":56,"column":6,"nodeType":"101","endLine":56,"endColumn":12,"suggestions":"110"},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client', 'currentPlayerName', 'game', 'toggleGameMode', and 'userName'. Either include them or remove the dependency array. If 'toggleGameMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["113"],"React Hook useEffect has missing dependencies: 'client', 'currentPlayerName', 'game', 'incrementData', 'score1', and 'score2'. Either include them or remove the dependency array. If 'incrementData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],"React Hook useEffect has missing dependencies: 'client', 'game', 'gameOver', 'grid', 'handleResult', and 'ready'. Either include them or remove the dependency array. If 'handleResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["115"],"React Hook useEffect has missing dependencies: 'data' and 'id'. Either include them or remove the dependency array.",["116"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},"Update the dependencies array to be: [client, currentPlayerName, game, toggleGameMode, userName]",{"range":"127","text":"128"},"Update the dependencies array to be: [result, numOfRounds, game, client, currentPlayerName, incrementData, score1, score2]",{"range":"129","text":"130"},"Update the dependencies array to be: [client, game, gameOver, grid, handleResult, ready, thisTurn]",{"range":"131","text":"132"},"Update the dependencies array to be: [data, id]",{"range":"133","text":"134"},{"range":"135","text":"134"},[2268,2270],"[client, currentPlayerName, game, toggleGameMode, userName]",[3317,3338],"[result, numOfRounds, game, client, currentPlayerName, incrementData, score1, score2]",[2008,2018],"[client, game, gameOver, grid, handleResult, ready, thisTurn]",[1634,1636],"[data, id]",[1717,1723]]