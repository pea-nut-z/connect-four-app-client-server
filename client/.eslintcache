[{"/Users/paulinez/connect-four/client/src/index.js":"1","/Users/paulinez/connect-four/client/src/contexts/AuthContext.js":"2","/Users/paulinez/connect-four/client/src/firebase.js":"3","/Users/paulinez/connect-four/client/src/App.js":"4","/Users/paulinez/connect-four/client/src/components/Game/help.js":"5","/Users/paulinez/connect-four/client/src/components/Game/SquareGrid.js":"6","/Users/paulinez/connect-four/client/src/components/auth/Login.js":"7","/Users/paulinez/connect-four/client/src/components/auth/PrivateRoute.js":"8","/Users/paulinez/connect-four/client/src/components/auth/ForgotPassword.js":"9","/Users/paulinez/connect-four/client/src/components/auth/UpdateProfile.js":"10","/Users/paulinez/connect-four/client/src/components/game/help.js":"11","/Users/paulinez/connect-four/client/src/components/game/SquareGrid.js":"12","/Users/paulinez/connect-four/client/src/components/auth/Signup.js":"13","/Users/paulinez/connect-four/client/src/components/Dashboard.js":"14","/Users/paulinez/connect-four/client/src/components/game/Game.js":"15","/Users/paulinez/connect-four/client/src/components/game/Grid.js":"16","/Users/paulinez/connect-four/client/src/components/Page.js":"17","/Users/paulinez/connect-four/client/src/contexts/socket.js":"18"},{"size":244,"mtime":1610334434438,"results":"19","hashOfConfig":"20"},{"size":1302,"mtime":1610072313649,"results":"21","hashOfConfig":"20"},{"size":689,"mtime":1612810170410,"results":"22","hashOfConfig":"20"},{"size":1281,"mtime":1612834119758,"results":"23","hashOfConfig":"20"},{"size":5783,"mtime":1612763864540,"results":"24","hashOfConfig":"20"},{"size":261,"mtime":1612041743315,"results":"25","hashOfConfig":"20"},{"size":1977,"mtime":1612818269560,"results":"26","hashOfConfig":"20"},{"size":423,"mtime":1612818247461,"results":"27","hashOfConfig":"20"},{"size":1676,"mtime":1612818248352,"results":"28","hashOfConfig":"20"},{"size":3009,"mtime":1612818243075,"results":"29","hashOfConfig":"20"},{"size":5629,"mtime":1613166529043,"results":"30","hashOfConfig":"20"},{"size":261,"mtime":1612850778742,"results":"31","hashOfConfig":"20"},{"size":2557,"mtime":1612818246248,"results":"32","hashOfConfig":"20"},{"size":1644,"mtime":1612818629663,"results":"33","hashOfConfig":"20"},{"size":5705,"mtime":1613169663608,"results":"34","hashOfConfig":"20"},{"size":2917,"mtime":1613180663388,"results":"35","hashOfConfig":"20"},{"size":1826,"mtime":1613158563459,"results":"36","hashOfConfig":"20"},{"size":205,"mtime":1613179998062,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wysr4h",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/paulinez/connect-four/client/src/index.js",[],["78","79"],"/Users/paulinez/connect-four/client/src/contexts/AuthContext.js",[],"/Users/paulinez/connect-four/client/src/firebase.js",[],"/Users/paulinez/connect-four/client/src/App.js",[],"/Users/paulinez/connect-four/client/src/components/Game/help.js",[],["80","81"],"/Users/paulinez/connect-four/client/src/components/Game/SquareGrid.js",[],"/Users/paulinez/connect-four/client/src/components/auth/Login.js",[],"/Users/paulinez/connect-four/client/src/components/auth/PrivateRoute.js",[],"/Users/paulinez/connect-four/client/src/components/auth/ForgotPassword.js",[],"/Users/paulinez/connect-four/client/src/components/auth/UpdateProfile.js",[],"/Users/paulinez/connect-four/client/src/components/game/help.js",[],"/Users/paulinez/connect-four/client/src/components/game/SquareGrid.js",[],"/Users/paulinez/connect-four/client/src/components/auth/Signup.js",[],"/Users/paulinez/connect-four/client/src/components/Dashboard.js",[],"/Users/paulinez/connect-four/client/src/components/game/Game.js",["82","83"],"import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Grid } from \"./Grid\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport { initialGrid } from \"./help\";\nimport \"./game.css\";\n\nexport default function Game({ userName, game, incrementData, toggleGameMode }) {\n  const [player1Name, assignPlayer1Name] = useState(\"\");\n  const [player2Name, assignPlayer2Name] = useState(\"\");\n  const [currentPlayerNum, setCurrentPlayerNum] = useState(\"p1\");\n  const [currentPlayerName, setCurrentPlayerName] = useState(\"\");\n  const [numOfRounds, setNumOfRounds] = useState(1);\n  const [score1, setScore1] = useState(0);\n  const [score2, setScore2] = useState(0);\n  const [result, saveResult] = useState(\"\");\n  const [resultMsg, displayResultMsg] = useState(\"\");\n  const [info, displayInfo] = useState(\"\");\n  const [replayButton, disableReplayButton] = useState(false);\n\n  const opponent = currentPlayerNum === \"p1\" ? player2Name : player1Name;\n  const client = useContext(SocketContext);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (game === \"single\") {\n      assignPlayer1Name(userName);\n      assignPlayer2Name(\"Peanutbot\");\n    }\n\n    if (game === \"multi\") {\n      client.on(\"full-server\", () => {\n        toggleGameMode(\"\");\n        alert(\"Sorry, server is full.\");\n      });\n\n      client.emit(\"player-connecting\", { userName });\n\n      client.on(\"player-1-connected\", (player2) => {\n        assignPlayer1Name(userName);\n        setCurrentPlayerName(userName);\n        player2 && assignPlayer2Name(player2);\n      });\n\n      client.on(\"player-2-connected\", (player1) => {\n        assignPlayer2Name(userName);\n        setCurrentPlayerName(userName);\n        setCurrentPlayerNum(\"p2\");\n        assignPlayer1Name(player1);\n      });\n\n      client.on(\"player-has-joined\", ({ userName, playerIndex }) => {\n        playerIndex === 0 ? assignPlayer1Name(userName) : assignPlayer2Name(userName);\n      });\n\n      //   handle disconnect\n      client.on(\"player-disconnected\", ({ name, num }) => {\n        num === 0 ? assignPlayer1Name(\"\") : assignPlayer2Name(\"\");\n        displayInfo(`${name} left💨`);\n      });\n      return () => client.disconnect(currentPlayerName);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (game === \"multi\") {\n      // to all clients except sender\n      client.emit(\"update-result-display-and-rounds\", {\n        result,\n        currentPlayerName,\n        numOfRounds,\n      });\n      client.on(\"update-result-display-and-rounds\", ({ result, currentPlayerName, numOfRounds }) => {\n        setNumOfRounds(numOfRounds);\n        if (result) {\n          result === \"Draw\"\n            ? displayResultMsg(result + \"! 🤝\")\n            : displayResultMsg(\"😱 YOU LOST! 💩\");\n          displayInfo(`Waiting for ${currentPlayerName} to restart the game...`);\n          disableReplayButton(true);\n        } else {\n          displayResultMsg(\"\");\n          displayInfo(\"\");\n          disableReplayButton(false);\n        }\n      });\n\n      // to all clients\n      client.emit(\"update-score\", { result });\n      client.on(\"update-score\", ({ result }) => {\n        result && incrementData(\"played\");\n        result === \"p1\" && setScore1(score1 + 1);\n        result === \"p2\" && setScore2(score2 + 1);\n      });\n    }\n  }, [result, numOfRounds]);\n\n  function handleResult(result) {\n    result === \"Draw\" ? displayResultMsg(result + \"! 🤝\") : displayResultMsg(\"🥂 YOU WIN! 🎉\");\n    displayInfo(\"Click Replay ⬇️\");\n    incrementData(\"won\");\n    saveResult(result);\n  }\n\n  function handleReplay() {\n    !resultMsg && incrementData(\"played\");\n    ref.current.resetGrid();\n    setNumOfRounds(numOfRounds + 1);\n    displayResultMsg(\"\");\n    displayInfo(\"\");\n    saveResult(\"\");\n  }\n\n  const handleQuit = () => {\n    const emptyGrid = JSON.stringify(ref.current.grid) === JSON.stringify(initialGrid());\n    if (!info && !result && !emptyGrid) incrementData(\"played\");\n    toggleGameMode(\"\");\n    window.location.reload(false);\n  };\n\n  return (\n    <>\n      <div id=\"container\" className=\"container\">\n        <div className=\"row\">\n          {/* SCORE DSIPLAY */}\n          <div id=\"scores\" className=\"col\">\n            <h6 className=\"text-primary\">Round: {numOfRounds}</h6>\n            <h4>\n              <span id=\"score-1\" style={{ color: \"#f012be\" }}>\n                {score1}\n              </span>\n              <span className=\"text-primary\"> vs </span>\n              <span id=\"score-2\" className=\"text-success\">\n                {score2}\n              </span>\n            </h4>\n          </div>\n          {/* PLAYERS LEGEND */}\n          <div id=\"players\" className=\"col\">\n            <h6 className=\"player float-right\">\n              {player1Name ? player1Name : \"Waiting...\"}\n              <div style={{ background: \"#f012be\" }} className=\"indicator rounded ml-2\" />\n            </h6>\n            <h6 className=\"player float-right\">\n              {player2Name ? player2Name : \"Waiting...\"}\n              <div className=\"bg-success indicator rounded ml-2\" />\n            </h6>\n          </div>\n        </div>\n      </div>\n\n      <Grid\n        ref={ref}\n        game={game}\n        handleResult={handleResult}\n        opponent={opponent}\n        currentPlayerNum={currentPlayerNum}\n      />\n\n      {/* RESULT */}\n      <h4 className=\"text-center text-warning mt-4\">{resultMsg}</h4>\n\n      {/* INFO */}\n      <h5 className=\"text-center text-warning mt-4\">{info}</h5>\n\n      <Button disabled={replayButton} className=\"btn-warning w-100 mt-4\" onClick={handleReplay}>\n        Replay\n      </Button>\n      <Button className=\"btn btn-warning w-100 mt-3 \" onClick={handleQuit}>\n        Quit\n      </Button>\n    </>\n  );\n}\n","/Users/paulinez/connect-four/client/src/components/game/Grid.js",["84"],"/Users/paulinez/connect-four/client/src/components/Page.js",["85","86"],"import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Dashboard from \"./Dashboard\";\nimport Game from \"./game/Game\";\nimport { SocketContext, socket } from \"../contexts/socket\";\nimport base from \"./../firebase\";\n\nexport default function Page() {\n  // USER INFO\n  const { currentUser, logout } = useAuth();\n  const userName = currentUser.displayName;\n  const id = currentUser.uid;\n  const [game, loadGame] = useState();\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(id)) || {});\n\n  function toggleGameMode(mode) {\n    loadGame(mode);\n  }\n\n  function incrementData(key) {\n    const updatedData = { ...data, [key]: data[key] + 1 };\n    setData(updatedData);\n    base.post(id, {\n      data: updatedData,\n    });\n  }\n\n  useEffect(() => {\n    const ref = base.syncState(id, {\n      context: {\n        setState: ({ data }) => setData({ ...data }),\n        state: { data },\n      },\n      state: \"data\",\n    });\n\n    const existingData = ref[\"context\"][\"state\"][\"data\"];\n    if (Object.keys(existingData).length === 0) {\n      base.post(id, {\n        data: { played: 0, won: 0 },\n      });\n    }\n\n    return () => {\n      base.removeBinding(ref);\n    };\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(id, JSON.stringify(data));\n  }, [data]);\n\n  return (\n    <>\n      {game ? (\n        <SocketContext.Provider value={socket}>\n          <Game\n            userName={userName}\n            game={game}\n            incrementData={incrementData}\n            toggleGameMode={toggleGameMode}\n          />\n        </SocketContext.Provider>\n      ) : (\n        <Dashboard\n          toggleGameMode={toggleGameMode}\n          logout={logout}\n          userName={userName}\n          played={data.played}\n          won={data.won}\n        />\n      )}\n    </>\n  );\n}\n","/Users/paulinez/connect-four/client/src/contexts/socket.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":63,"column":6,"nodeType":"95","endLine":63,"endColumn":8,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":96,"column":6,"nodeType":"95","endLine":96,"endColumn":27,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"99","line":52,"column":6,"nodeType":"95","endLine":52,"endColumn":16,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":47,"column":6,"nodeType":"95","endLine":47,"endColumn":8,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":51,"column":6,"nodeType":"95","endLine":51,"endColumn":12,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client', 'currentPlayerName', 'game', 'toggleGameMode', and 'userName'. Either include them or remove the dependency array. If 'toggleGameMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'client', 'currentPlayerName', 'game', 'incrementData', 'score1', and 'score2'. Either include them or remove the dependency array. If 'incrementData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],"React Hook useEffect has missing dependencies: 'client', 'game', 'gameOver', 'grid', 'handleResult', and 'ready'. Either include them or remove the dependency array. If 'handleResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["109"],"React Hook useEffect has missing dependencies: 'data' and 'id'. Either include them or remove the dependency array.",["110"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},"Update the dependencies array to be: [client, currentPlayerName, game, toggleGameMode, userName]",{"range":"121","text":"122"},"Update the dependencies array to be: [result, numOfRounds, game, client, currentPlayerName, incrementData, score1, score2]",{"range":"123","text":"124"},"Update the dependencies array to be: [client, game, gameOver, grid, handleResult, ready, thisTurn]",{"range":"125","text":"126"},"Update the dependencies array to be: [data, id]",{"range":"127","text":"128"},{"range":"129","text":"128"},[2249,2251],"[client, currentPlayerName, game, toggleGameMode, userName]",[3298,3319],"[result, numOfRounds, game, client, currentPlayerName, incrementData, score1, score2]",[1693,1703],"[client, game, gameOver, grid, handleResult, ready, thisTurn]",[1226,1228],"[data, id]",[1309,1315]]