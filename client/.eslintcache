[{"/Users/paulinez/connect-four/client/src/index.js":"1","/Users/paulinez/connect-four/client/src/contexts/AuthContext.js":"2","/Users/paulinez/connect-four/client/src/firebase.js":"3","/Users/paulinez/connect-four/client/src/App.js":"4","/Users/paulinez/connect-four/client/src/components/Game/help.js":"5","/Users/paulinez/connect-four/client/src/components/Game/SquareGrid.js":"6","/Users/paulinez/connect-four/client/src/components/auth/Login.js":"7","/Users/paulinez/connect-four/client/src/components/auth/PrivateRoute.js":"8","/Users/paulinez/connect-four/client/src/components/auth/ForgotPassword.js":"9","/Users/paulinez/connect-four/client/src/components/auth/UpdateProfile.js":"10","/Users/paulinez/connect-four/client/src/components/game/help.js":"11","/Users/paulinez/connect-four/client/src/components/game/SquareGrid.js":"12","/Users/paulinez/connect-four/client/src/components/auth/Signup.js":"13","/Users/paulinez/connect-four/client/src/components/Dashboard.js":"14","/Users/paulinez/connect-four/client/src/components/game/Game.js":"15","/Users/paulinez/connect-four/client/src/components/game/Grid.js":"16","/Users/paulinez/connect-four/client/src/components/Page.js":"17","/Users/paulinez/connect-four/client/src/contexts/socket.js":"18"},{"size":244,"mtime":1610334434438,"results":"19","hashOfConfig":"20"},{"size":1302,"mtime":1610072313649,"results":"21","hashOfConfig":"20"},{"size":689,"mtime":1612810170410,"results":"22","hashOfConfig":"20"},{"size":1281,"mtime":1612834119758,"results":"23","hashOfConfig":"20"},{"size":5783,"mtime":1612763864540,"results":"24","hashOfConfig":"20"},{"size":261,"mtime":1612041743315,"results":"25","hashOfConfig":"20"},{"size":1977,"mtime":1612818269560,"results":"26","hashOfConfig":"20"},{"size":423,"mtime":1612818247461,"results":"27","hashOfConfig":"20"},{"size":1676,"mtime":1612818248352,"results":"28","hashOfConfig":"20"},{"size":3009,"mtime":1612818243075,"results":"29","hashOfConfig":"20"},{"size":4598,"mtime":1618784596229,"results":"30","hashOfConfig":"20"},{"size":282,"mtime":1618983698517,"results":"31","hashOfConfig":"20"},{"size":2598,"mtime":1616726248028,"results":"32","hashOfConfig":"20"},{"size":1646,"mtime":1616695624243,"results":"33","hashOfConfig":"20"},{"size":6625,"mtime":1619067632892,"results":"34","hashOfConfig":"20"},{"size":3264,"mtime":1619054120649,"results":"35","hashOfConfig":"20"},{"size":2520,"mtime":1619064543039,"results":"36","hashOfConfig":"20"},{"size":273,"mtime":1619055870319,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wysr4h",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/paulinez/connect-four/client/src/index.js",[],["78","79"],"/Users/paulinez/connect-four/client/src/contexts/AuthContext.js",[],"/Users/paulinez/connect-four/client/src/firebase.js",[],"/Users/paulinez/connect-four/client/src/App.js",[],"/Users/paulinez/connect-four/client/src/components/Game/help.js",[],["80","81"],"/Users/paulinez/connect-four/client/src/components/Game/SquareGrid.js",[],"/Users/paulinez/connect-four/client/src/components/auth/Login.js",[],"/Users/paulinez/connect-four/client/src/components/auth/PrivateRoute.js",[],"/Users/paulinez/connect-four/client/src/components/auth/ForgotPassword.js",[],"/Users/paulinez/connect-four/client/src/components/auth/UpdateProfile.js",[],"/Users/paulinez/connect-four/client/src/components/game/help.js",[],"/Users/paulinez/connect-four/client/src/components/game/SquareGrid.js",[],"/Users/paulinez/connect-four/client/src/components/auth/Signup.js",[],"/Users/paulinez/connect-four/client/src/components/Dashboard.js",[],"/Users/paulinez/connect-four/client/src/components/game/Game.js",["82","83"],"/Users/paulinez/connect-four/client/src/components/game/Grid.js",["84","85"],"import React, { useState, useImperativeHandle, forwardRef, useEffect, useContext } from \"react\";\nimport SquareGrid from \"./SquareGrid\";\nimport { getGrid, checkResult, findAValidMove, findAiMove } from \"./help\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport const Grid = forwardRef(\n  ({ game, initialGrid, handleResult, opponent, currentPlayerNum }, ref) => {\n    const blankGrid = JSON.parse(JSON.stringify(initialGrid));\n    const [grid, setGrid] = useState(blankGrid);\n\n    const [gameOver, setGameOver] = useState(false);\n    const [ready, toggleReady] = useState(true);\n    const [thisTurn, endThisTurn] = useState();\n    const client = useContext(SocketContext);\n    const currentPlayerColor = currentPlayerNum === \"p1\" ? \"#f012be\" : \"#2ecc40\";\n    const opponentPlayerColor = currentPlayerNum === \"p1\" ? \"#2ecc40\" : \"#f012be\";\n\n    useImperativeHandle(ref, () => ({\n      grid,\n      resetGrid,\n    }));\n\n    const resetGrid = (result) => {\n      if (game === \"single\" && result === \"p1\") {\n        toggleReady(true);\n      }\n      setGrid(initialGrid);\n      setGameOver(false);\n      endThisTurn(!thisTurn);\n    };\n\n    useEffect(() => {\n      if (!gameOver && game === \"single\" && !ready) {\n        let newGrid = grid.slice();\n        const [aiMoveRowIdx, aiMoveColIdx] = findAiMove(newGrid);\n        newGrid[aiMoveRowIdx][aiMoveColIdx] = \"p2\";\n        setGrid(newGrid);\n        let result = checkResult(newGrid);\n        if (result) {\n          setGameOver(true);\n          handleResult(result);\n        } else {\n          toggleReady(!ready);\n        }\n      }\n\n      // to all clients except sender\n      if (game === \"multi\") {\n        toggleReady(!ready);\n        client.emit(\"update-grid\", { grid, gameOver, ready });\n        client.on(\"update-grid\", ({ grid, gameOver, ready }) => {\n          setGameOver(gameOver);\n          setGrid(grid);\n          toggleReady(ready);\n        });\n      }\n    }, [thisTurn]);\n\n    const handleMove = (colIdx) => {\n      if (!gameOver && ready) {\n        let newGrid = grid.slice();\n        const rowIdx = findAValidMove(newGrid, colIdx);\n        newGrid[rowIdx][colIdx] = currentPlayerNum;\n        setGrid(newGrid);\n        let result = checkResult(newGrid);\n        result && setGameOver(true);\n        result && handleResult(result);\n        game === \"single\" && toggleReady(false);\n        endThisTurn(!thisTurn);\n      }\n    };\n\n    return (\n      <>\n        {/* Grid */}\n        <div id=\"boarder\">\n          <div id=\"grid\">\n            {grid.map((row, rowIndex) => (\n              <div className=\"row\" key={rowIndex}>\n                {row.map((value, colIdx) => (\n                  <SquareGrid key={colIdx} value={value} colIdx={colIdx} handleMove={handleMove} />\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* WHO's TURN */}\n        <h4\n          className=\"text-center mt-4\"\n          style={{ color: ready ? currentPlayerColor : opponentPlayerColor }}\n        >\n          {gameOver || !opponent\n            ? \"\"\n            : ready\n            ? \"Your turn\"\n            : opponent\n            ? `Waiting for ${opponent}...`\n            : \"Waiting for a player to join...\"}\n        </h4>\n      </>\n    );\n  }\n);\n","/Users/paulinez/connect-four/client/src/components/Page.js",["86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Dashboard from \"./Dashboard\";\nimport Game from \"./game/Game\";\nimport { getGrid } from \"./game/help\";\n\nimport { SocketContext, socket } from \"../contexts/socket\";\nimport base from \"./../firebase\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function Page() {\n  // USER INFO\n  const { currentUser, logout } = useAuth();\n  const id = currentUser.uid;\n  const profileName = currentUser.displayName;\n  const location = useLocation();\n  const userName = location.state?.userName || profileName;\n  // const initialGrid = getGrid();\n  const initialGrid = [\n    [null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null],\n    [\"p1\", null, null, null, null, null, null],\n    [\"p1\", null, null, null, null, null, null],\n    [\"p1\", \"p2\", \"p2\", \"p2\", null, null, null],\n    [\"p2\", \"p1\", \"p2\", \"p1\", \"p2\", \"p1\", \"p2\"],\n  ];\n\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(id)) || {});\n  const [game, loadGame] = useState();\n\n  useEffect(() => {\n    const ref = base.syncState(id, {\n      context: {\n        setState: ({ data }) => setData({ ...data }),\n        state: { data },\n      },\n      state: \"data\",\n    });\n\n    const existingData = ref[\"context\"][\"state\"][\"data\"];\n    if (Object.keys(existingData).length === 0) {\n      base.post(id, {\n        data: { played: 0, won: 0 },\n      });\n      setData({ played: 0, won: 0 });\n    }\n\n    return () => {\n      base.removeBinding(ref);\n    };\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(id, JSON.stringify(data));\n  }, [data]);\n\n  function toggleGameMode(mode) {\n    loadGame(mode);\n  }\n\n  function incrementData(key1, key2) {\n    let updatedData = { ...data, [key1]: data[key1] + 1 };\n    if (key2) updatedData = { ...updatedData, [key2]: data[key2] + 1 };\n    setData(updatedData);\n    base.post(id, {\n      data: updatedData,\n    });\n  }\n\n  return (\n    <>\n      {game ? (\n        <SocketContext.Provider value={socket}>\n          <Game\n            userName={userName}\n            game={game}\n            initialGrid={initialGrid}\n            incrementData={incrementData}\n            toggleGameMode={toggleGameMode}\n          />\n        </SocketContext.Provider>\n      ) : (\n        <Dashboard\n          toggleGameMode={toggleGameMode}\n          logout={logout}\n          userName={userName}\n          played={data.played}\n          won={data.won}\n        />\n      )}\n    </>\n  );\n}\n","/Users/paulinez/connect-four/client/src/contexts/socket.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":64,"column":6,"nodeType":"97","endLine":64,"endColumn":8,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":97,"column":6,"nodeType":"97","endLine":97,"endColumn":27,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":17},{"ruleId":"95","severity":1,"message":"105","line":58,"column":8,"nodeType":"97","endLine":58,"endColumn":18,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"102","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":17},{"ruleId":"95","severity":1,"message":"107","line":51,"column":6,"nodeType":"97","endLine":51,"endColumn":8,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"109","line":55,"column":6,"nodeType":"97","endLine":55,"endColumn":12,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client', 'currentPlayerName', 'game', 'toggleGameMode', and 'userName'. Either include them or remove the dependency array. If 'toggleGameMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["113"],"React Hook useEffect has missing dependencies: 'client', 'currentPlayerName', 'game', 'incrementData', 'score1', and 'score2'. Either include them or remove the dependency array. If 'incrementData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],"no-unused-vars","'getGrid' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'client', 'game', 'gameOver', 'grid', 'handleResult', and 'ready'. Either include them or remove the dependency array. If 'handleResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["115"],"React Hook useEffect has missing dependencies: 'data' and 'id'. Either include them or remove the dependency array.",["116"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},"Update the dependencies array to be: [client, currentPlayerName, game, toggleGameMode, userName]",{"range":"127","text":"128"},"Update the dependencies array to be: [result, numOfRounds, game, client, currentPlayerName, incrementData, score1, score2]",{"range":"129","text":"130"},"Update the dependencies array to be: [client, game, gameOver, grid, handleResult, ready, thisTurn]",{"range":"131","text":"132"},"Update the dependencies array to be: [data, id]",{"range":"133","text":"134"},{"range":"135","text":"134"},[2268,2270],"[client, currentPlayerName, game, toggleGameMode, userName]",[3317,3338],"[result, numOfRounds, game, client, currentPlayerName, incrementData, score1, score2]",[1953,1963],"[client, game, gameOver, grid, handleResult, ready, thisTurn]",[1569,1571],"[data, id]",[1652,1658]]