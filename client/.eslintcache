[{"/Users/paulinez/Documents/connect-four-react/client/src/index.js":"1","/Users/paulinez/Documents/connect-four-react/client/src/App.js":"2","/Users/paulinez/Documents/connect-four-react/client/src/contexts/AuthContext.js":"3","/Users/paulinez/Documents/connect-four-react/client/src/components/Page.js":"4","/Users/paulinez/Documents/connect-four-react/client/src/components/auth/PrivateRoute.js":"5","/Users/paulinez/Documents/connect-four-react/client/src/components/auth/UpdateProfile.js":"6","/Users/paulinez/Documents/connect-four-react/client/src/components/auth/Signup.js":"7","/Users/paulinez/Documents/connect-four-react/client/src/components/auth/Login.js":"8","/Users/paulinez/Documents/connect-four-react/client/src/components/auth/ForgotPassword.js":"9","/Users/paulinez/Documents/connect-four-react/client/src/firebase.js":"10","/Users/paulinez/Documents/connect-four-react/client/src/components/Dashboard.js":"11","/Users/paulinez/Documents/connect-four-react/client/src/contexts/socket.js":"12","/Users/paulinez/Documents/connect-four-react/client/src/components/game/Game.js":"13","/Users/paulinez/Documents/connect-four-react/client/src/components/game/help.js":"14","/Users/paulinez/Documents/connect-four-react/client/src/components/game/Grid.js":"15","/Users/paulinez/Documents/connect-four-react/client/src/components/game/SquareGrid.js":"16"},{"size":268,"mtime":1623965702817,"results":"17","hashOfConfig":"18"},{"size":1281,"mtime":1623963854048,"results":"19","hashOfConfig":"18"},{"size":1280,"mtime":1622149469381,"results":"20","hashOfConfig":"18"},{"size":2735,"mtime":1623964921772,"results":"21","hashOfConfig":"18"},{"size":423,"mtime":1612818247461,"results":"22","hashOfConfig":"18"},{"size":3095,"mtime":1622233516990,"results":"23","hashOfConfig":"18"},{"size":2783,"mtime":1622167197388,"results":"24","hashOfConfig":"18"},{"size":2143,"mtime":1622232367583,"results":"25","hashOfConfig":"18"},{"size":1676,"mtime":1612818248352,"results":"26","hashOfConfig":"18"},{"size":864,"mtime":1622154120390,"results":"27","hashOfConfig":"18"},{"size":1907,"mtime":1622171286384,"results":"28","hashOfConfig":"18"},{"size":205,"mtime":1623259060163,"results":"29","hashOfConfig":"18"},{"size":7076,"mtime":1623965558887,"results":"30","hashOfConfig":"18"},{"size":4598,"mtime":1654042336598,"results":"31","hashOfConfig":"18"},{"size":3361,"mtime":1623966146060,"results":"32","hashOfConfig":"18"},{"size":377,"mtime":1623444468296,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ihu77y",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/paulinez/Documents/connect-four-react/client/src/index.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/App.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/contexts/AuthContext.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/Page.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/auth/PrivateRoute.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/auth/UpdateProfile.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/auth/Signup.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/auth/Login.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/auth/ForgotPassword.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/firebase.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/Dashboard.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/contexts/socket.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/game/Game.js",["67"],"import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Grid } from \"./Grid\";\nimport { SocketContext } from \"../../contexts/socket\";\nimport \"./game.css\";\n\nexport default function Game({ userName, game, initialGrid, incrementData, toggleGameMode }) {\n  const [player1Name, assignPlayer1Name] = useState(\"\");\n  const [player2Name, assignPlayer2Name] = useState(\"\");\n  const [currentPlayerNum, setCurrentPlayerNum] = useState(\"p1\");\n  const [currentPlayerName, setCurrentPlayerName] = useState(\"\");\n  const [numOfRounds, setNumOfRounds] = useState(1);\n  const [score1, setScore1] = useState(0);\n  const [score2, setScore2] = useState(0);\n  const [result, saveResult] = useState(\"\");\n  const [resultMsg, displayResultMsg] = useState(\"\");\n  const [info, displayInfo] = useState(\"\");\n  const [replayButton, disableReplayButton] = useState(false);\n\n  const opponent = currentPlayerNum === \"p1\" ? player2Name : player1Name;\n  const client = useContext(SocketContext);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (game === \"single\") {\n      assignPlayer1Name(userName);\n      assignPlayer2Name(\"Peanutbot\");\n    }\n\n    if (game === \"multi\") {\n      client.on(\"full-server\", () => {\n        console.log(\"ran\");\n\n        toggleGameMode(\"\");\n        alert(\"Sorry, server is full.\");\n      });\n\n      client.emit(\"player-connecting\", { userName });\n\n      client.on(\"player-1-connected\", (player2) => {\n        assignPlayer1Name(userName);\n        setCurrentPlayerName(userName);\n        player2 && assignPlayer2Name(player2);\n      });\n\n      client.on(\"player-2-connected\", (player1) => {\n        assignPlayer2Name(userName);\n        setCurrentPlayerName(userName);\n        setCurrentPlayerNum(\"p2\");\n        assignPlayer1Name(player1);\n      });\n\n      client.on(\"player-has-joined\", ({ userName, playerIndex }) => {\n        playerIndex === 0 ? assignPlayer1Name(userName) : assignPlayer2Name(userName);\n        setScore1(0);\n        setScore2(0);\n      });\n\n      //   handle disconnect\n      client.on(\"player-disconnected\", ({ name, num }) => {\n        num === 0 ? assignPlayer1Name(\"\") : assignPlayer2Name(\"\");\n        displayInfo(`${name} left💨`);\n      });\n      return () => client.disconnect(currentPlayerName);\n    }\n  }, [client, currentPlayerName, game, userName]);\n\n  useEffect(() => {\n    if (game === \"multi\") {\n      // to all clients except sender\n      client.emit(\"update-result-display-and-rounds\", {\n        result,\n        currentPlayerName,\n        numOfRounds,\n      });\n      client.on(\"update-result-display-and-rounds\", ({ result, currentPlayerName, numOfRounds }) => {\n        setNumOfRounds(numOfRounds);\n        if (result) {\n          result === \"Draw\"\n            ? displayResultMsg(result + \"! 🤝\")\n            : displayResultMsg(\"😱 YOU LOST! 💩\");\n          displayInfo(`Waiting for ${currentPlayerName} to restart the game...`);\n          disableReplayButton(true);\n        } else {\n          displayResultMsg(\"\");\n          displayInfo(\"\");\n          disableReplayButton(false);\n        }\n      });\n\n      // to all clients\n      client.emit(\"update-score\", { result });\n      client.on(\"update-score\", ({ result }) => {\n        result && incrementData(\"played\");\n        result === \"p1\" && setScore1(score1 + 1);\n        result === \"p2\" && setScore2(score2 + 1);\n      });\n    }\n  }, [result, numOfRounds, client, currentPlayerName, game, incrementData, score1, score2]);\n\n  useEffect(() => {\n    if (player1Name && player2Name) {\n      ref.current.toggleGameOver(false);\n    } else {\n      ref.current.toggleGameOver(true);\n      // disableReplayButton(true);\n    }\n  }, [player1Name, player2Name]);\n\n  function handleResult(result) {\n    if (game === \"multi\") {\n      result === \"Draw\" ? displayResultMsg(result + \"! 🤝\") : displayResultMsg(\"🥂 YOU WIN! 🎉\");\n      //   displayInfo(\"Click Replay ⬇️\");\n      incrementData(\"won\");\n      //   saveResult(result);\n    } else {\n      if (result === \"p1\") {\n        displayResultMsg(\"🥂 YOU WIN! 🎉\");\n        setScore1(score1 + 1);\n        incrementData(\"won\", \"played\");\n      }\n      if (result === \"p2\") {\n        displayResultMsg(\"😱 YOU LOST! 💩\");\n        setScore2(score2 + 1);\n        incrementData(\"played\");\n      }\n      if (result === \"Draw\") {\n        displayResultMsg(result + \"! 🤝\");\n        incrementData(\"played\");\n      }\n    }\n    displayInfo(\"Click Replay ⬇️\");\n    saveResult(result);\n  }\n\n  function handleReplay() {\n    !result && incrementData(\"played\");\n    ref.current.resetGrid(result);\n    setNumOfRounds(numOfRounds + 1);\n    displayResultMsg(\"\");\n    displayInfo(\"\");\n    saveResult(\"\");\n  }\n\n  const handleQuit = () => {\n    const blankGrid = JSON.stringify(ref.current.grid) === JSON.stringify(initialGrid);\n    if (!info && !result && !blankGrid) {\n      incrementData(\"played\");\n    }\n    if (game === \"multi\") window.location.reload(false); // when quit restart socket.\n    toggleGameMode(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          {/* SCORE DSIPLAY */}\n          <div className=\"col\">\n            <h6 data-testid=\"numOfRounds\" className=\"text-primary\">\n              Round: {numOfRounds}\n            </h6>\n            <h4>\n              <span data-testid=\"score1\" style={{ color: \"#f012be\" }}>\n                {score1}\n              </span>\n              <span className=\"text-primary\"> vs </span>\n              <span data-testid=\"score2\" className=\"text-success\">\n                {score2}\n              </span>\n            </h4>\n          </div>\n          {/* PLAYERS LEGEND */}\n          <div className=\"col align-self-end\">\n            <h6 data-testid=\"p1Name\" className=\"player row justify-content-end\">\n              {player1Name ? player1Name : \"Waiting...\"}\n              <div style={{ background: \"#f012be\" }} className=\"indicator rounded ml-2\" />\n            </h6>\n            <h6 data-testid=\"p2Name\" className=\"player row justify-content-end\">\n              {player2Name ? player2Name : \"Waiting...\"}\n              <div className=\"bg-success indicator rounded ml-2\" />\n            </h6>\n          </div>\n        </div>\n      </div>\n\n      <Grid\n        ref={ref}\n        game={game}\n        initialGrid={initialGrid}\n        handleResult={handleResult}\n        opponent={opponent}\n        currentPlayerNum={currentPlayerNum}\n      />\n\n      {/* RESULT */}\n      <h4 data-testid=\"resultMsg\" className=\"text-center text-warning mt-4\">\n        {resultMsg}\n      </h4>\n\n      {/* INFO */}\n      <h5 data-testid=\"info\" className=\"text-center text-warning mt-4\">\n        {info}\n      </h5>\n\n      <Button\n        disabled={replayButton}\n        id=\"replay\"\n        data-testid=\"replay\"\n        className=\"btn-warning w-100 mt-4\"\n        onClick={handleReplay}\n      >\n        Replay\n      </Button>\n      <Button\n        id=\"quitBtn\"\n        data-testid=\"quit\"\n        className=\"btn btn-warning w-100 mt-3 \"\n        onClick={handleQuit}\n      >\n        Quit\n      </Button>\n    </>\n  );\n}\n","/Users/paulinez/Documents/connect-four-react/client/src/components/game/help.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/game/Grid.js",[],"/Users/paulinez/Documents/connect-four-react/client/src/components/game/SquareGrid.js",[],{"ruleId":"68","severity":1,"message":"69","line":66,"column":6,"nodeType":"70","endLine":66,"endColumn":49,"suggestions":"71"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleGameMode'. Either include it or remove the dependency array. If 'toggleGameMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["72"],{"desc":"73","fix":"74"},"Update the dependencies array to be: [client, currentPlayerName, game, toggleGameMode, userName]",{"range":"75","text":"76"},[2297,2340],"[client, currentPlayerName, game, toggleGameMode, userName]"]