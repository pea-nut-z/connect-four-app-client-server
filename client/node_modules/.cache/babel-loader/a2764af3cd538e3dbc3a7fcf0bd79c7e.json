{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import _defineProperty from\"/Users/paulinez/connect-four/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/paulinez/connect-four/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Button}from\"react-bootstrap\";import{Link,useHistory}from\"react-router-dom\";import SquareGrid from\"./SquareGrid\";import{createGrid,checkResult,findAValidMove}from\"./help\";import\"./game.css\";import io from\"socket.io-client\";export default function MultiPlayer(){var history=useHistory();var blankGrid=createGrid(6,7);var _useState=useState(blankGrid),_useState2=_slicedToArray(_useState,2),grid=_useState2[0],setGrid=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),connected1=_useState4[0],toggleConnection1=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),connected2=_useState6[0],toggleConnection2=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),result=_useState8[0],displayResult=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),endThisTurn=_useState10[0],triggerEndThisTurn=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),ready=_useState12[0],toggleReady=_useState12[1];var _useState13=useState(\"Player-1\"),_useState14=_slicedToArray(_useState13,2),currentPlayer=_useState14[0],setCurrentPlayer=_useState14[1];useEffect(function(){var client=io(\"http://localhost:3001\");// ignore the 3rd player\nclient.on(\"full-server\",function(){alert(\"Sorry, server is full!\");history.push(\"/\");});client.on(\"assign-player-as-player2\",function(){setCurrentPlayer(\"Player-2\");});// set connection status indicators\nclient.on(\"player-connection-status\",function(status){if(status[0])toggleConnection1(true);if(status[1])toggleConnection2(true);});// switch turns\nclient.emit(\"switch-turn\",grid);client.on(\"take-the-turn\",function(grid){setGrid(grid);var result=checkResult(grid);displayResult(result);toggleReady(true);});// handle disconnect\nclient.on(\"player-disconnected\",function(num){if(num===0)toggleConnection1(false);if(num===1)toggleConnection2(false);});return function(){client.disconnect();};},[endThisTurn]);var handleClick=function handleClick(columnIndex){if(ready&&!result){var newGrid=grid.slice();var _findAValidMove=findAValidMove(newGrid,columnIndex),_findAValidMove2=_slicedToArray(_findAValidMove,2),row=_findAValidMove2[0],col=_findAValidMove2[1];newGrid[row][col]=currentPlayer;setGrid(newGrid);var _result=checkResult(newGrid);displayResult(_result);toggleReady(false);triggerEndThisTurn(!endThisTurn);}};function handleReplay(){window.location.reload(false);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"boarder\",children:/*#__PURE__*/_jsx(\"div\",{id:\"grid\",children:grid.map(function(row,rowIndex){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:row.map(function(value,columnIndex){return/*#__PURE__*/_jsx(SquareGrid,{value:value,columnIndex:columnIndex,handleClick:handleClick},columnIndex);})},rowIndex);})})}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-success text-center mt-4\",children:result?\"\":ready?\"Your turn!\":\"Waiting for the other player...\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-danger text-center mt-4\",children:result}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",_defineProperty({className:\"rounded\"},\"className\",\"connection \".concat(connected1?\"bg-success\":\"bg-danger\"))),\"Player 1\",/*#__PURE__*/_jsx(\"span\",{children:connected1?\" Connected\":\" Disconnected\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"connection \".concat(connected2?\"bg-success\":\"bg-danger\")}),\"Player 2\",/*#__PURE__*/_jsx(\"span\",{children:connected2?\" Connected\":\" Disconnected\"})]}),/*#__PURE__*/_jsx(Button,{className:\"btn-warning w-100 mt-5\",onClick:handleReplay,children:\"Replay\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-warning w-100 mt-3 \",children:\"Quit\"})]});}","map":{"version":3,"sources":["/Users/paulinez/connect-four/client/src/components/Game/MultiPlayer.js"],"names":["React","useState","useEffect","Button","Link","useHistory","SquareGrid","createGrid","checkResult","findAValidMove","io","MultiPlayer","history","blankGrid","grid","setGrid","connected1","toggleConnection1","connected2","toggleConnection2","result","displayResult","endThisTurn","triggerEndThisTurn","ready","toggleReady","currentPlayer","setCurrentPlayer","client","on","alert","push","status","emit","num","disconnect","handleClick","columnIndex","newGrid","slice","row","col","handleReplay","window","location","reload","map","rowIndex","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport SquareGrid from \"./SquareGrid\";\nimport { createGrid, checkResult, findAValidMove } from \"./help\";\nimport \"./game.css\";\nimport io from \"socket.io-client\";\n\nexport default function MultiPlayer() {\n  const history = useHistory();\n  const blankGrid = createGrid(6, 7);\n  const [grid, setGrid] = useState(blankGrid);\n  const [connected1, toggleConnection1] = useState(false);\n  const [connected2, toggleConnection2] = useState(false);\n  const [result, displayResult] = useState(\"\");\n\n  const [endThisTurn, triggerEndThisTurn] = useState();\n  const [ready, toggleReady] = useState(false);\n  const [currentPlayer, setCurrentPlayer] = useState(\"Player-1\");\n\n  useEffect(() => {\n    const client = io(\"http://localhost:3001\");\n\n    // ignore the 3rd player\n    client.on(\"full-server\", () => {\n      alert(\"Sorry, server is full!\");\n      history.push(\"/\");\n    });\n\n    client.on(\"assign-player-as-player2\", () => {\n      setCurrentPlayer(\"Player-2\");\n    });\n\n    // set connection status indicators\n    client.on(\"player-connection-status\", (status) => {\n      if (status[0]) toggleConnection1(true);\n      if (status[1]) toggleConnection2(true);\n    });\n\n    // switch turns\n    client.emit(\"switch-turn\", grid);\n    client.on(\"take-the-turn\", (grid) => {\n      setGrid(grid);\n      let result = checkResult(grid);\n      displayResult(result);\n      toggleReady(true);\n    });\n\n    // handle disconnect\n    client.on(\"player-disconnected\", (num) => {\n      if (num === 0) toggleConnection1(false);\n      if (num === 1) toggleConnection2(false);\n    });\n\n    return () => {\n      client.disconnect();\n    };\n  }, [endThisTurn]);\n\n  const handleClick = (columnIndex) => {\n    if (ready && !result) {\n      let newGrid = grid.slice();\n      const [row, col] = findAValidMove(newGrid, columnIndex);\n      newGrid[row][col] = currentPlayer;\n      setGrid(newGrid);\n      let result = checkResult(newGrid);\n      displayResult(result);\n      toggleReady(false);\n      triggerEndThisTurn(!endThisTurn);\n    }\n  };\n\n  function handleReplay() {\n    window.location.reload(false);\n  }\n\n  return (\n    <>\n      <div id=\"boarder\">\n        <div id=\"grid\">\n          {grid.map((row, rowIndex) => (\n            <div className=\"row\" key={rowIndex}>\n              {row.map((value, columnIndex) => (\n                <SquareGrid\n                  key={columnIndex}\n                  value={value}\n                  columnIndex={columnIndex}\n                  handleClick={handleClick}\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* WHO's TURN DISPLAY*/}\n      <h4 className=\"text-success text-center mt-4\">\n        {result ? \"\" : ready ? \"Your turn!\" : \"Waiting for the other player...\"}\n      </h4>\n\n      {/* RESULT DSIPLAY*/}\n      <h4 className=\"text-danger text-center mt-4\">{result}</h4>\n\n      {/* CONNECTION INDICATOR */}\n      <div>\n        <div\n          className=\"rounded\"\n          className={`connection ${connected1 ? \"bg-success\" : \"bg-danger\"}`}\n        />\n        Player 1<span>{connected1 ? \" Connected\" : \" Disconnected\"}</span>\n      </div>\n      <div>\n        <div\n          className={`connection ${connected2 ? \"bg-success\" : \"bg-danger\"}`}\n        />\n        Player 2<span>{connected2 ? \" Connected\" : \" Disconnected\"}</span>\n      </div>\n      <Button className=\"btn-warning w-100 mt-5\" onClick={handleReplay}>\n        Replay\n      </Button>\n      <Link to=\"/\" className=\"btn btn-warning w-100 mt-3 \">\n        Quit\n      </Link>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}