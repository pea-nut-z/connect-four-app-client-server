{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulinez/connect-four/client/src/components/Game/SinglePlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport SquareGrid from \"./SquareGrid\";\nimport { createGrid, checkResult, findAValidMove, findAiMove } from \"./help\";\nimport \"./singlePlayer.css\";\nexport default function SinglePlayer() {\n  _s();\n\n  const initialGrid = createGrid(6, 7);\n  const [grid, setGrid] = useState(initialGrid);\n  const [huPlayerIsNext, setHuPlayerIsNext] = useState(true);\n  const [warning, displayWarning] = useState(\"\");\n  const [result, displayResult] = useState(\"\");\n  const [turn, switchTurn] = useState(true);\n  let huPlayer = \"Player-1\";\n  let aiPlayer = \"Player-2\";\n  useEffect(() => {\n    if (!huPlayerIsNext) {\n      let newGrid = grid.slice();\n      const [aiMoveRowIndex, aiMoveColumnIndex] = findAiMove(newGrid, huPlayer, aiPlayer);\n      newGrid[aiMoveRowIndex][aiMoveColumnIndex] = aiPlayer;\n      let result = checkResult(newGrid);\n      displayResult(result);\n\n      if (!result) {\n        setHuPlayerIsNext(true);\n      }\n    }\n  }, [turn]);\n\n  const handleClick = columnIndex => {\n    if (!result && huPlayerIsNext) {\n      let newGrid = findAValidMove(grid, huPlayer, columnIndex);\n      console.log({\n        newGrid\n      }); // setGrid(newGrid);\n      // if (!newGrid) {\n      //   displayWarning(\"Invalid Move!\");\n      // } else {\n      //   displayWarning(\"\");\n      //   // let result = checkResult(newGrid);\n      //   // displayResult(result);\n      //   // if (!result) {\n      //   //   setHuPlayerIsNext(!huPlayerIsNext);\n      //   //   switchTurn(!turn);\n      //   // }\n      // }\n    }\n  };\n\n  function handleReplay() {\n    window.location.reload(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"grid\",\n      className: \"w-100 bg-blue\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((value, columnIndex) => /*#__PURE__*/_jsxDEV(SquareGrid, {\n          value: value,\n          columnIndex: columnIndex,\n          handleClick: handleClick\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"turn-display\",\n      children: result ? \"\" : huPlayerIsNext ? \"Your turn\" : \"Peanutbot's turn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: warning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-warning w-100\",\n      onClick: handleReplay,\n      children: \"Replay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-warning w-100 mt-3\",\n      children: \"Quit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SinglePlayer, \"WEluZm3J7Eh+JO/OSqci4/eWbJk=\");\n\n_c = SinglePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePlayer\");","map":{"version":3,"sources":["/Users/paulinez/connect-four/client/src/components/Game/SinglePlayer.js"],"names":["React","useState","useEffect","Button","Link","SquareGrid","createGrid","checkResult","findAValidMove","findAiMove","SinglePlayer","initialGrid","grid","setGrid","huPlayerIsNext","setHuPlayerIsNext","warning","displayWarning","result","displayResult","turn","switchTurn","huPlayer","aiPlayer","newGrid","slice","aiMoveRowIndex","aiMoveColumnIndex","handleClick","columnIndex","console","log","handleReplay","window","location","reload","map","row","rowIndex","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,cAAlC,EAAkDC,UAAlD,QAAoE,QAApE;AACA,OAAO,oBAAP;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAMC,WAAW,GAAGL,UAAU,CAAC,CAAD,EAAI,CAAJ,CAA9B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACU,WAAD,CAAhC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACe,OAAD,EAAUC,cAAV,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,MAAD,EAASC,aAAT,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,IAAD,EAAOC,UAAP,IAAqBpB,QAAQ,CAAC,IAAD,CAAnC;AACA,MAAIqB,QAAQ,GAAG,UAAf;AACA,MAAIC,QAAQ,GAAG,UAAf;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACY,cAAL,EAAqB;AACnB,UAAIU,OAAO,GAAGZ,IAAI,CAACa,KAAL,EAAd;AACA,YAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsClB,UAAU,CACpDe,OADoD,EAEpDF,QAFoD,EAGpDC,QAHoD,CAAtD;AAKAC,MAAAA,OAAO,CAACE,cAAD,CAAP,CAAwBC,iBAAxB,IAA6CJ,QAA7C;AACA,UAAIL,MAAM,GAAGX,WAAW,CAACiB,OAAD,CAAxB;AACAL,MAAAA,aAAa,CAACD,MAAD,CAAb;;AACA,UAAI,CAACA,MAAL,EAAa;AACXH,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF;AACF,GAfQ,EAeN,CAACK,IAAD,CAfM,CAAT;;AAiBA,QAAMQ,WAAW,GAAIC,WAAD,IAAiB;AACnC,QAAI,CAACX,MAAD,IAAWJ,cAAf,EAA+B;AAC7B,UAAIU,OAAO,GAAGhB,cAAc,CAACI,IAAD,EAAOU,QAAP,EAAiBO,WAAjB,CAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEP,QAAAA;AAAF,OAAZ,EAF6B,CAG7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GAlBD;;AAoBA,WAASQ,YAAT,GAAwB;AACtBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;;AAED,sBACE;AAAA,4BAEE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,eAAzB;AAAA,gBACGvB,IAAI,CAACwB,GAAL,CAAS,CAACC,GAAD,EAAMC,QAAN,kBACR;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGD,GAAG,CAACD,GAAJ,CAAQ,CAACG,KAAD,EAAQV,WAAR,kBACP,QAAC,UAAD;AAEE,UAAA,KAAK,EAAEU,KAFT;AAGE,UAAA,WAAW,EAAEV,WAHf;AAIE,UAAA,WAAW,EAAED;AAJf,WACOC,WADP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,SAA0BS,QAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,gBACGpB,MAAM,GAAG,EAAH,GAAQJ,cAAc,GAAG,WAAH,GAAiB;AADhD;AAAA;AAAA;AAAA;AAAA,YAlBF,eAqBE;AAAA;AAAA;AAAA;AAAA,YArBF,eAuBE;AAAA,gBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,YAvBF,eAwBE;AAAA;AAAA;AAAA;AAAA,YAxBF,eA0BE;AAAA,gBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,YA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA,YA3BF,eA4BE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAEc,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,eA+BE;AAAA;AAAA;AAAA;AAAA,YA/BF,eAgCE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,4BAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF,eAmCE;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA,kBADF;AAuCD;;GA1FuBtB,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport SquareGrid from \"./SquareGrid\";\nimport { createGrid, checkResult, findAValidMove, findAiMove } from \"./help\";\nimport \"./singlePlayer.css\";\n\nexport default function SinglePlayer() {\n  const initialGrid = createGrid(6, 7);\n  const [grid, setGrid] = useState(initialGrid);\n  const [huPlayerIsNext, setHuPlayerIsNext] = useState(true);\n  const [warning, displayWarning] = useState(\"\");\n  const [result, displayResult] = useState(\"\");\n  const [turn, switchTurn] = useState(true);\n  let huPlayer = \"Player-1\";\n  let aiPlayer = \"Player-2\";\n\n  useEffect(() => {\n    if (!huPlayerIsNext) {\n      let newGrid = grid.slice();\n      const [aiMoveRowIndex, aiMoveColumnIndex] = findAiMove(\n        newGrid,\n        huPlayer,\n        aiPlayer\n      );\n      newGrid[aiMoveRowIndex][aiMoveColumnIndex] = aiPlayer;\n      let result = checkResult(newGrid);\n      displayResult(result);\n      if (!result) {\n        setHuPlayerIsNext(true);\n      }\n    }\n  }, [turn]);\n\n  const handleClick = (columnIndex) => {\n    if (!result && huPlayerIsNext) {\n      let newGrid = findAValidMove(grid, huPlayer, columnIndex);\n      console.log({ newGrid });\n      // setGrid(newGrid);\n\n      // if (!newGrid) {\n      //   displayWarning(\"Invalid Move!\");\n      // } else {\n      //   displayWarning(\"\");\n      //   // let result = checkResult(newGrid);\n      //   // displayResult(result);\n      //   // if (!result) {\n      //   //   setHuPlayerIsNext(!huPlayerIsNext);\n      //   //   switchTurn(!turn);\n      //   // }\n      // }\n    }\n  };\n\n  function handleReplay() {\n    window.location.reload(false);\n  }\n\n  return (\n    <>\n      {/* GRID */}\n      <div id=\"grid\" className=\"w-100 bg-blue\">\n        {grid.map((row, rowIndex) => (\n          <div className=\"row\" key={rowIndex}>\n            {row.map((value, columnIndex) => (\n              <SquareGrid\n                key={columnIndex}\n                value={value}\n                columnIndex={columnIndex}\n                handleClick={handleClick}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n\n      {/* WHO's TURN DISPLAY*/}\n      <span className=\"turn-display\">\n        {result ? \"\" : huPlayerIsNext ? \"Your turn\" : \"Peanutbot's turn\"}\n      </span>\n      <br />\n      {/* WARNING MSG*/}\n      <span>{warning}</span>\n      <br />\n      {/* WINNING RESULT*/}\n      <span>{result}</span>\n      <br />\n      <Button className=\"btn-warning w-100\" onClick={handleReplay}>\n        Replay\n      </Button>\n      <br />\n      <Link to=\"/\" className=\"btn btn-warning w-100 mt-3\">\n        Quit\n      </Link>\n      <br />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}