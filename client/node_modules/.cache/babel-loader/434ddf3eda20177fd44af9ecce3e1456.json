{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulinez/connect-four/client/src/components/Game/SinglePlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport SquareGrid from \"./SquareGrid\";\nimport { createGrid, checkResult, findAValidMove, findAiMove } from \"./help\";\nimport \"./singlePlayer.css\";\nexport default function SinglePlayer() {\n  _s();\n\n  const rows = 6;\n  const columns = 7;\n  const initialGrid = createGrid(rows, columns);\n  const [grid, setGrid] = useState(initialGrid);\n  const [huPlayerIsNext, setHuPlayerIsNext] = useState(true);\n  const [result, displayResult] = useState(\"\");\n  const [turn, switchTurn] = useState(true);\n  let huPlayer = \"Player-1\";\n  let aiPlayer = \"Player-2\";\n  useEffect(() => {\n    if (!huPlayerIsNext) {\n      let newGrid = grid.slice();\n      const [aiMoveRowIndex, aiMoveColumnIndex] = findAiMove(newGrid, columns, huPlayer, aiPlayer);\n      newGrid[aiMoveRowIndex][aiMoveColumnIndex] = aiPlayer;\n      setGrid(newGrid);\n      let result = checkResult(newGrid);\n      displayResult(result);\n\n      if (!result) {\n        setHuPlayerIsNext(true);\n      }\n    }\n  }, [turn]);\n\n  const handleClick = columnIndex => {\n    if (!result && huPlayerIsNext) {\n      let newGrid = grid.slice();\n      const [huMoveRowIndex, huMoveColumnIndex] = findAValidMove(newGrid, columnIndex);\n      newGrid[huMoveRowIndex][huMoveColumnIndex] = huPlayer;\n      setGrid(newGrid);\n      let result = checkResult(newGrid);\n\n      if (result === \"Player-1 wins\") {\n        displayResult(\"You win!\");\n      }\n\n      if (result === \"Player-2 wins\") {\n        displayResult(\"Peanutbot wins!\");\n      }\n\n      if (result === \"Draw\") {\n        displayResult(\"Draw!\");\n      }\n\n      if (!result) {\n        setHuPlayerIsNext(!huPlayerIsNext);\n        switchTurn(!turn);\n      }\n    }\n  };\n\n  function handleReplay() {\n    window.location.reload(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"grid\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((value, columnIndex) => /*#__PURE__*/_jsxDEV(SquareGrid, {\n          value: value,\n          columnIndex: columnIndex,\n          handleClick: handleClick\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-success text-center mt-4\",\n      children: result ? \"\" : huPlayerIsNext ? \"Your turn\" : \"Peanutbot's turn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-danger text-center mt-4\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-warning w-100 mt-5\",\n      onClick: handleReplay,\n      children: \"Replay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-warning w-100 mt-3\",\n      children: \"Quit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SinglePlayer, \"SuojyCu4uqF/ex3YKylqAgbsGI4=\");\n\n_c = SinglePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePlayer\");","map":{"version":3,"sources":["/Users/paulinez/connect-four/client/src/components/Game/SinglePlayer.js"],"names":["React","useState","useEffect","Button","Link","SquareGrid","createGrid","checkResult","findAValidMove","findAiMove","SinglePlayer","rows","columns","initialGrid","grid","setGrid","huPlayerIsNext","setHuPlayerIsNext","result","displayResult","turn","switchTurn","huPlayer","aiPlayer","newGrid","slice","aiMoveRowIndex","aiMoveColumnIndex","handleClick","columnIndex","huMoveRowIndex","huMoveColumnIndex","handleReplay","window","location","reload","map","row","rowIndex","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport SquareGrid from \"./SquareGrid\";\nimport { createGrid, checkResult, findAValidMove, findAiMove } from \"./help\";\nimport \"./singlePlayer.css\";\n\nexport default function SinglePlayer() {\n  const rows = 6;\n  const columns = 7;\n  const initialGrid = createGrid(rows, columns);\n\n  const [grid, setGrid] = useState(initialGrid);\n  const [huPlayerIsNext, setHuPlayerIsNext] = useState(true);\n  const [result, displayResult] = useState(\"\");\n  const [turn, switchTurn] = useState(true);\n  let huPlayer = \"Player-1\";\n  let aiPlayer = \"Player-2\";\n\n  useEffect(() => {\n    if (!huPlayerIsNext) {\n      let newGrid = grid.slice();\n      const [aiMoveRowIndex, aiMoveColumnIndex] = findAiMove(\n        newGrid,\n        columns,\n        huPlayer,\n        aiPlayer\n      );\n      newGrid[aiMoveRowIndex][aiMoveColumnIndex] = aiPlayer;\n      setGrid(newGrid);\n      let result = checkResult(newGrid);\n      displayResult(result);\n      if (!result) {\n        setHuPlayerIsNext(true);\n      }\n    }\n  }, [turn]);\n\n  const handleClick = (columnIndex) => {\n    if (!result && huPlayerIsNext) {\n      let newGrid = grid.slice();\n      const [huMoveRowIndex, huMoveColumnIndex] = findAValidMove(\n        newGrid,\n        columnIndex\n      );\n      newGrid[huMoveRowIndex][huMoveColumnIndex] = huPlayer;\n      setGrid(newGrid);\n      let result = checkResult(newGrid);\n      if (result === \"Player-1 wins\") {\n        displayResult(\"You win!\");\n      }\n      if (result === \"Player-2 wins\") {\n        displayResult(\"Peanutbot wins!\");\n      }\n      if (result === \"Draw\") {\n        displayResult(\"Draw!\");\n      }\n      if (!result) {\n        setHuPlayerIsNext(!huPlayerIsNext);\n        switchTurn(!turn);\n      }\n    }\n  };\n\n  function handleReplay() {\n    window.location.reload(false);\n  }\n\n  return (\n    <>\n      <div id=\"grid\">\n        {grid.map((row, rowIndex) => (\n          <div className=\"row\" key={rowIndex}>\n            {row.map((value, columnIndex) => (\n              <SquareGrid\n                key={columnIndex}\n                value={value}\n                columnIndex={columnIndex}\n                handleClick={handleClick}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n\n      {/* WHO's TURN DISPLAY*/}\n      <h4 className=\"text-success text-center mt-4\">\n        {result ? \"\" : huPlayerIsNext ? \"Your turn\" : \"Peanutbot's turn\"}\n      </h4>\n\n      {/* RESULT DSIPLAY*/}\n      <h4 className=\"text-danger text-center mt-4\">{result}</h4>\n      <Button className=\"btn-warning w-100 mt-5\" onClick={handleReplay}>\n        Replay\n      </Button>\n      <Link to=\"/\" className=\"btn btn-warning w-100 mt-3\">\n        Quit\n      </Link>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}