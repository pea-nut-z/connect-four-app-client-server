{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/Users/paulinez/connect-four/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/paulinez/connect-four/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Button,Alert}from\"react-bootstrap\";import{Link}from\"react-router-dom\";import SquareGrid from\"./SquareGrid\";import{createGrid,checkResult}from\"./help\";import\"./singlePlayer.css\";import io from\"socket.io-client\";export default function SinglePlayer(props){var grid=createGrid(6,7);var _useState=useState(grid),_useState2=_slicedToArray(_useState,2),newGrid=_useState2[0],setGrid=_useState2[1];//   const [stepNumber, setStepNumber] = useState(0);\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),huIsNext=_useState4[0],setHuIsNext=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),huMoves=_useState6[0],recordHuMoves=_useState6[1];//For debug\nvar turn=huIsNext?\"Your turn\":\"Peanutbot's turn\";var resultDisplay;var result=checkResult(newGrid);if(result===\"huPlayer\")resultDisplay=\"You win!\";if(result===\"aiPlayer\")resultDisplay=\"Peanutbot wins!\";if(result===\"tie\")resultDisplay=\"Draw!\";var handleClick=function handleClick(rowIndex,columnIndex){if(!result){var r=rowIndex;var c=columnIndex;if(newGrid[r+1][c]!==null&&newGrid[r][c]===null){recordHuMoves(function(moves){return[].concat(_toConsumableArray(moves),[\"(\"+r+\",\"+c+\")\"]);});//For debug\nnewGrid[r][c]=huIsNext?\"huPlayer\":\"aiPlayer\";setHuIsNext(!huIsNext);}}};function handleReplay(){window.location.reload(false);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"grid\",children:newGrid.map(function(row,rowIndex){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:row.map(function(value,columnIndex){return/*#__PURE__*/_jsx(SquareGrid,{value:value,rowIndex:rowIndex,columnIndex:columnIndex,handleClick:handleClick},columnIndex);})},rowIndex);})}),/*#__PURE__*/_jsx(\"span\",{className:huIsNext?\"huTurn\":\"aiTurn\",children:result?\"\":turn}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{children:resultDisplay}),/*#__PURE__*/_jsx(Button,{onClick:handleReplay,children:\"Replay\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-primary w-100 mt-3\",children:\"Quit\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:huMoves})]});}","map":{"version":3,"sources":["/Users/paulinez/connect-four/client/src/components/Game/SinglePlayer.js"],"names":["React","useEffect","useState","Button","Alert","Link","SquareGrid","createGrid","checkResult","io","SinglePlayer","props","grid","newGrid","setGrid","huIsNext","setHuIsNext","huMoves","recordHuMoves","turn","resultDisplay","result","handleClick","rowIndex","columnIndex","r","c","moves","handleReplay","window","location","reload","map","row","value"],"mappings":"ycAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,iBAA9B,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,QAAxC,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC1C,GAAMC,CAAAA,IAAI,CAAGL,UAAU,CAAC,CAAD,CAAI,CAAJ,CAAvB,CAD0C,cAEfL,QAAQ,CAACU,IAAD,CAFO,wCAEnCC,OAFmC,eAE1BC,OAF0B,eAG1C;AAH0C,eAIVZ,QAAQ,CAAC,IAAD,CAJE,yCAInCa,QAJmC,eAIzBC,WAJyB,8BAKTd,QAAQ,CAAC,EAAD,CALC,yCAKnCe,OALmC,eAK1BC,aAL0B,eAKK;AAC/C,GAAIC,CAAAA,IAAI,CAAGJ,QAAQ,CAAG,WAAH,CAAiB,kBAApC,CAEA,GAAIK,CAAAA,aAAJ,CACA,GAAIC,CAAAA,MAAM,CAAGb,WAAW,CAACK,OAAD,CAAxB,CACA,GAAIQ,MAAM,GAAK,UAAf,CAA2BD,aAAa,CAAG,UAAhB,CAC3B,GAAIC,MAAM,GAAK,UAAf,CAA2BD,aAAa,CAAG,iBAAhB,CAC3B,GAAIC,MAAM,GAAK,KAAf,CAAsBD,aAAa,CAAG,OAAhB,CAEtB,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAWC,WAAX,CAA2B,CAC7C,GAAI,CAACH,MAAL,CAAa,CACX,GAAII,CAAAA,CAAC,CAAGF,QAAR,CACA,GAAIG,CAAAA,CAAC,CAAGF,WAAR,CAEA,GAAIX,OAAO,CAACY,CAAC,CAAG,CAAL,CAAP,CAAeC,CAAf,IAAsB,IAAtB,EAA8Bb,OAAO,CAACY,CAAD,CAAP,CAAWC,CAAX,IAAkB,IAApD,CAA0D,CACxDR,aAAa,CAAC,SAACS,KAAD,qCAAeA,KAAf,GAAsB,IAAMF,CAAN,CAAU,GAAV,CAAgBC,CAAhB,CAAoB,GAA1C,IAAD,CAAb,CAA+D;AAC/Db,OAAO,CAACY,CAAD,CAAP,CAAWC,CAAX,EAAgBX,QAAQ,CAAG,UAAH,CAAgB,UAAxC,CACAC,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CACF,CACF,CAXD,CAaA,QAASa,CAAAA,YAAT,EAAwB,CACtBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EACD,CAED,mBACE,wCACE,YAAK,EAAE,CAAC,MAAR,UACGlB,OAAO,CAACmB,GAAR,CAAY,SAACC,GAAD,CAAMV,QAAN,qBACX,YAAK,SAAS,CAAC,KAAf,UACGU,GAAG,CAACD,GAAJ,CAAQ,SAACE,KAAD,CAAQV,WAAR,qBACP,KAAC,UAAD,EAEE,KAAK,CAAEU,KAFT,CAGE,QAAQ,CAAEX,QAHZ,CAIE,WAAW,CAAEC,WAJf,CAKE,WAAW,CAAEF,WALf,EACOE,WADP,CADO,EAAR,CADH,EAA0BD,QAA1B,CADW,EAAZ,CADH,EADF,cAkBE,aAAM,SAAS,CAAER,QAAQ,CAAG,QAAH,CAAc,QAAvC,UACGM,MAAM,CAAG,EAAH,CAAQF,IADjB,EAlBF,cAqBE,aArBF,cAuBE,sBAAOC,aAAP,EAvBF,cAwBE,KAAC,MAAD,EAAQ,OAAO,CAAEQ,YAAjB,oBAxBF,cAyBE,aAzBF,cA0BE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,4BAAvB,kBA1BF,cA6BE,aA7BF,cA+BE,mBAAIX,OAAJ,EA/BF,GADF,CAmCD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport SquareGrid from \"./SquareGrid\";\nimport { createGrid, checkResult } from \"./help\";\nimport \"./singlePlayer.css\";\nimport io from \"socket.io-client\";\n\nexport default function SinglePlayer(props) {\n  const grid = createGrid(6, 7);\n  const [newGrid, setGrid] = useState(grid);\n  //   const [stepNumber, setStepNumber] = useState(0);\n  const [huIsNext, setHuIsNext] = useState(true);\n  const [huMoves, recordHuMoves] = useState([]); //For debug\n  let turn = huIsNext ? \"Your turn\" : \"Peanutbot's turn\";\n\n  let resultDisplay;\n  let result = checkResult(newGrid);\n  if (result === \"huPlayer\") resultDisplay = \"You win!\";\n  if (result === \"aiPlayer\") resultDisplay = \"Peanutbot wins!\";\n  if (result === \"tie\") resultDisplay = \"Draw!\";\n\n  const handleClick = (rowIndex, columnIndex) => {\n    if (!result) {\n      let r = rowIndex;\n      let c = columnIndex;\n\n      if (newGrid[r + 1][c] !== null && newGrid[r][c] === null) {\n        recordHuMoves((moves) => [...moves, \"(\" + r + \",\" + c + \")\"]); //For debug\n        newGrid[r][c] = huIsNext ? \"huPlayer\" : \"aiPlayer\";\n        setHuIsNext(!huIsNext);\n      }\n    }\n  };\n\n  function handleReplay() {\n    window.location.reload(false);\n  }\n\n  return (\n    <>\n      <div id=\"grid\">\n        {newGrid.map((row, rowIndex) => (\n          <div className=\"row\" key={rowIndex}>\n            {row.map((value, columnIndex) => (\n              <SquareGrid\n                key={columnIndex}\n                value={value}\n                rowIndex={rowIndex}\n                columnIndex={columnIndex}\n                handleClick={handleClick}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n\n      {/* Who's turn */}\n      <span className={huIsNext ? \"huTurn\" : \"aiTurn\"}>\n        {result ? \"\" : turn}\n      </span>\n      <br />\n\n      <span>{resultDisplay}</span>\n      <Button onClick={handleReplay}>Replay</Button>\n      <br />\n      <Link to=\"/\" className=\"btn btn-primary w-100 mt-3\">\n        Quit\n      </Link>\n      <br />\n      {/* Record moves */}\n      <p>{huMoves}</p>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}